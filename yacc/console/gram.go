// Code generated by goyacc -o gram.go -p yy gram.y. DO NOT EDIT.

//line gram.y:3
package spqrparser

import __yyfmt__ "fmt"

//line gram.y:3

import (
	"crypto/rand"
	"encoding/binary"
	"encoding/hex"
	"strconv"
	"strings"
)

func randomHex(n int) (string, error) {
	bytes := make([]byte, n)
	if _, err := rand.Read(bytes); err != nil {
		return "", err
	}
	return hex.EncodeToString(bytes), nil
}

//line gram.y:25
type yySymType struct {
	yys          int
	str          string
	strlist      []string
	byte         byte
	bytes        []byte
	integer      int
	uinteger     uint
	uintegerlist []uint
	bool         bool
	empty        struct{}

	set       *Set
	statement Statement
	show      *Show

	drop   *Drop
	create *Create

	kill   *Kill
	lock   *Lock
	unlock *Unlock

	krbound *KeyRangeBound

	ds            *DistributionDefinition
	kr            *KeyRangeDefinition
	shard         *ShardDefinition
	sharding_rule *ShardingRuleDefinition

	register_router   *RegisterRouter
	unregister_router *UnregisterRouter

	split *SplitKeyRange
	move  *MoveKeyRange
	unite *UniteKeyRange

	redistribute *RedistributeKeyRange

	invalidate_cache      *InvalidateCache
	sync_reference_tables *SyncReferenceTables

	shutdown *Shutdown
	listen   *Listen

	trace     *TraceStmt
	stoptrace *StopTraceStmt

	distribution *DistributionDefinition

	alter                *Alter
	alter_distribution   *AlterDistribution
	distributed_relation *DistributedRelation

	relations    []*DistributedRelation
	relation     *DistributedRelation
	entrieslist  []ShardingRuleEntry
	dEntrieslist []DistributionKeyEntry

	shruleEntry ShardingRuleEntry

	distrKeyEntry DistributionKeyEntry

	sharding_rule_selector *ShardingRuleSelector
	key_range_selector     *KeyRangeSelector
	distribution_selector  *DistributionSelector
	autoincrement          *AutoIncrement

	colref ColumnRef
	where  WhereClauseNode

	order_clause OrderClause
	opt_asc_desc OptAscDesc

	group_clause GroupByClause

	opt_batch_size int

	retryMoveTaskGroup *RetryMoveTaskGroup
}

const IDENT = 57346
const COMMAND = 57347
const SHOW = 57348
const KILL = 57349
const WHERE = 57350
const OR = 57351
const AND = 57352
const TEQ = 57353
const TCOMMA = 57354
const SCONST = 57355
const ICONST = 57356
const TSEMICOLON = 57357
const TOPENBR = 57358
const TCLOSEBR = 57359
const SHUTDOWN = 57360
const LISTEN = 57361
const REGISTER = 57362
const UNREGISTER = 57363
const ROUTER = 57364
const ROUTE = 57365
const CREATE = 57366
const ADD = 57367
const DROP = 57368
const LOCK = 57369
const UNLOCK = 57370
const SPLIT = 57371
const MOVE = 57372
const COMPOSE = 57373
const SET = 57374
const CASCADE = 57375
const ATTACH = 57376
const ALTER = 57377
const DETACH = 57378
const REDISTRIBUTE = 57379
const REFERENCE = 57380
const CHECK = 57381
const APPLY = 57382
const SHARDING = 57383
const COLUMN = 57384
const TABLE = 57385
<<<<<<< HEAD
const TABLES = 57386
const HASH = 57387
const FUNCTION = 57388
const KEY = 57389
const RANGE = 57390
const DISTRIBUTION = 57391
const RELATION = 57392
const REPLICATED = 57393
const AUTO = 57394
const INCREMENT = 57395
=======
const HASH = 57386
const FUNCTION = 57387
const KEY = 57388
const RANGE = 57389
const DISTRIBUTION = 57390
const RELATION = 57391
const REPLICATED = 57392
const AUTO = 57393
const INCREMENT = 57394
<<<<<<< HEAD
const STARTT = 57395
>>>>>>> 732e79a8 (initial)
const SEQUENCE = 57396
const SCHEMA = 57397
const SHARDS = 57398
const KEY_RANGES = 57399
const ROUTERS = 57400
const SHARD = 57401
const HOST = 57402
const SHARDING_RULES = 57403
const RULE = 57404
const COLUMNS = 57405
const VERSION = 57406
const HOSTS = 57407
const SEQUENCES = 57408
const IS_READ_ONLY = 57409
const BY = 57410
const FROM = 57411
const TO = 57412
const WITH = 57413
const UNITE = 57414
const ALL = 57415
const ADDRESS = 57416
const FOR = 57417
const CLIENT = 57418
const BATCH = 57419
const SIZE = 57420
const INVALIDATE = 57421
const CACHE = 57422
<<<<<<< HEAD
const SYNC = 57423
const RETRY = 57424
const IDENTITY = 57425
const MURMUR = 57426
const CITY = 57427
const START = 57428
const STOP = 57429
const TRACE = 57430
const MESSAGES = 57431
const TASK = 57432
const GROUP = 57433
const VARCHAR = 57434
const INTEGER = 57435
const INT = 57436
const TYPES = 57437
const UUID = 57438
const OP = 57439
const ASC = 57440
const DESC = 57441
const ORDER = 57442
=======
const RETRY = 57423
const IDENTITY = 57424
const MURMUR = 57425
const CITY = 57426
const START = 57427
const STOP = 57428
const TRACE = 57429
const MESSAGES = 57430
const TASK = 57431
const GROUP = 57432
const VARCHAR = 57433
const INTEGER = 57434
const INT = 57435
const TYPES = 57436
const UUID = 57437
const OP = 57438
const ASC = 57439
const DESC = 57440
const ORDER = 57441
>>>>>>> 732e79a8 (initial)
=======
const SEQUENCE = 57395
const SCHEMA = 57396
const SHARDS = 57397
const KEY_RANGES = 57398
const ROUTERS = 57399
const SHARD = 57400
const HOST = 57401
const SHARDING_RULES = 57402
const RULE = 57403
const COLUMNS = 57404
const VERSION = 57405
const HOSTS = 57406
const SEQUENCES = 57407
const IS_READ_ONLY = 57408
const BY = 57409
const FROM = 57410
const TO = 57411
const WITH = 57412
const UNITE = 57413
const ALL = 57414
const ADDRESS = 57415
const FOR = 57416
const CLIENT = 57417
const BATCH = 57418
const SIZE = 57419
const INVALIDATE = 57420
const CACHE = 57421
const RETRY = 57422
const IDENTITY = 57423
const MURMUR = 57424
const CITY = 57425
const START = 57426
const STOP = 57427
const TRACE = 57428
const MESSAGES = 57429
const TASK = 57430
const GROUP = 57431
const VARCHAR = 57432
const INTEGER = 57433
const INT = 57434
const TYPES = 57435
const UUID = 57436
const OP = 57437
const ASC = 57438
const DESC = 57439
const ORDER = 57440
>>>>>>> d59ef666 (minor)

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"COMMAND",
	"SHOW",
	"KILL",
	"WHERE",
	"OR",
	"AND",
	"TEQ",
	"TCOMMA",
	"SCONST",
	"ICONST",
	"TSEMICOLON",
	"TOPENBR",
	"TCLOSEBR",
	"SHUTDOWN",
	"LISTEN",
	"REGISTER",
	"UNREGISTER",
	"ROUTER",
	"ROUTE",
	"CREATE",
	"ADD",
	"DROP",
	"LOCK",
	"UNLOCK",
	"SPLIT",
	"MOVE",
	"COMPOSE",
	"SET",
	"CASCADE",
	"ATTACH",
	"ALTER",
	"DETACH",
	"REDISTRIBUTE",
	"REFERENCE",
	"CHECK",
	"APPLY",
	"SHARDING",
	"COLUMN",
	"TABLE",
	"TABLES",
	"HASH",
	"FUNCTION",
	"KEY",
	"RANGE",
	"DISTRIBUTION",
	"RELATION",
	"REPLICATED",
	"AUTO",
	"INCREMENT",
	"SEQUENCE",
	"SCHEMA",
	"SHARDS",
	"KEY_RANGES",
	"ROUTERS",
	"SHARD",
	"HOST",
	"SHARDING_RULES",
	"RULE",
	"COLUMNS",
	"VERSION",
	"HOSTS",
	"SEQUENCES",
	"IS_READ_ONLY",
	"BY",
	"FROM",
	"TO",
	"WITH",
	"UNITE",
	"ALL",
	"ADDRESS",
	"FOR",
	"CLIENT",
	"BATCH",
	"SIZE",
	"INVALIDATE",
	"CACHE",
	"SYNC",
	"RETRY",
	"IDENTITY",
	"MURMUR",
	"CITY",
	"START",
	"STOP",
	"TRACE",
	"MESSAGES",
	"TASK",
	"GROUP",
	"VARCHAR",
	"INTEGER",
	"INT",
	"TYPES",
	"UUID",
	"OP",
	"ASC",
	"DESC",
	"ORDER",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:1027
=======
//line gram.y:1041
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:1042
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:1035
>>>>>>> b252c210 (fixes after review)

//line yacctab:1
var yyExca = [...]int8{
	-1, 1,
	1, -1,
	-2, 0,
}

const yyPrivate = 57344

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
const yyLast = 353

var yyAct = [...]int16{
	160, 257, 217, 272, 190, 185, 220, 211, 184, 159,
	183, 176, 182, 188, 157, 175, 168, 141, 110, 269,
	270, 173, 193, 212, 213, 214, 66, 215, 171, 156,
	115, 136, 64, 148, 68, 107, 72, 62, 61, 71,
	94, 238, 81, 178, 69, 262, 263, 264, 205, 80,
	105, 219, 97, 106, 165, 98, 102, 145, 127, 265,
	98, 98, 250, 98, 179, 126, 98, 125, 181, 113,
	114, 98, 116, 124, 230, 70, 219, 203, 194, 187,
	146, 109, 178, 100, 121, 123, 60, 258, 229, 53,
	128, 129, 169, 239, 113, 54, 191, 51, 191, 52,
	278, 140, 143, 179, 93, 147, 72, 55, 166, 151,
	153, 118, 149, 246, 117, 99, 108, 101, 256, 151,
	74, 79, 247, 221, 152, 161, 162, 163, 164, 150,
	130, 154, 112, 103, 244, 243, 144, 242, 172, 53,
	191, 137, 98, 180, 142, 54, 104, 51, 139, 52,
	96, 67, 170, 236, 237, 189, 111, 55, 174, 95,
	50, 63, 134, 135, 132, 90, 89, 207, 46, 49,
	209, 225, 225, 199, 206, 122, 48, 47, 267, 222,
	223, 142, 248, 226, 208, 225, 59, 218, 228, 241,
	216, 73, 75, 92, 224, 58, 189, 85, 86, 87,
	88, 227, 57, 56, 231, 98, 120, 196, 98, 234,
	232, 201, 198, 197, 240, 83, 235, 158, 202, 245,
	233, 196, 83, 77, 82, 84, 198, 197, 218, 45,
	253, 82, 186, 1, 22, 204, 249, 251, 19, 18,
	254, 17, 16, 15, 255, 14, 12, 260, 13, 259,
	8, 266, 9, 155, 268, 192, 138, 273, 210, 274,
	133, 167, 131, 23, 21, 91, 275, 20, 277, 276,
	261, 31, 32, 177, 252, 271, 279, 6, 281, 273,
	280, 283, 282, 34, 33, 39, 40, 5, 4, 25,
	24, 28, 29, 30, 35, 36, 3, 7, 11, 10,
	41, 78, 37, 76, 65, 2, 200, 195, 119, 0,
=======
const yyLast = 356
=======
const yyLast = 355
>>>>>>> d59ef666 (minor)

var yyAct = [...]int16{
	156, 256, 224, 212, 272, 185, 206, 215, 179, 155,
	178, 171, 177, 180, 153, 183, 170, 164, 137, 107,
	269, 270, 64, 188, 207, 208, 209, 62, 210, 66,
	168, 70, 167, 152, 69, 112, 133, 144, 104, 67,
	60, 79, 59, 257, 261, 262, 263, 92, 225, 235,
	94, 173, 200, 214, 99, 102, 78, 161, 103, 264,
	95, 141, 95, 95, 95, 124, 247, 110, 111, 68,
	113, 174, 95, 225, 123, 122, 95, 173, 176, 121,
	227, 198, 189, 214, 182, 142, 106, 97, 125, 126,
	118, 120, 110, 58, 257, 279, 51, 174, 136, 139,
	226, 52, 143, 49, 186, 50, 147, 149, 216, 236,
	115, 165, 186, 53, 162, 243, 147, 145, 91, 114,
	70, 96, 157, 158, 159, 160, 105, 77, 148, 150,
	146, 127, 109, 98, 186, 255, 51, 72, 100, 175,
	140, 52, 244, 49, 241, 50, 240, 239, 95, 138,
	166, 184, 101, 53, 135, 169, 233, 234, 131, 132,
	129, 108, 93, 202, 88, 61, 204, 65, 48, 194,
	201, 47, 46, 87, 217, 218, 44, 220, 277, 220,
	95, 203, 213, 119, 45, 250, 211, 138, 245, 219,
	221, 184, 154, 57, 71, 73, 56, 55, 222, 228,
	83, 84, 85, 86, 231, 229, 267, 191, 90, 54,
	237, 232, 193, 192, 266, 242, 81, 220, 223, 81,
	230, 238, 117, 213, 95, 80, 82, 252, 80, 181,
	191, 246, 248, 196, 75, 193, 192, 253, 43, 1,
	197, 22, 199, 19, 259, 258, 18, 17, 265, 254,
	16, 15, 14, 12, 13, 8, 273, 9, 274, 151,
	268, 187, 134, 205, 130, 275, 163, 128, 278, 276,
	21, 89, 20, 260, 172, 30, 31, 280, 249, 282,
	273, 281, 285, 284, 283, 251, 286, 33, 32, 38,
	39, 271, 6, 24, 23, 27, 28, 29, 34, 35,
	5, 4, 3, 7, 40, 11, 36, 10, 76, 74,
	63, 2, 195, 190, 116, 0, 0, 0, 0, 0,
>>>>>>> 732e79a8 (initial)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 0, 0, 0, 38, 0, 0,
	0, 0, 0, 0, 42, 0, 44, 43, 0, 0,
	0, 26, 27,
}

var yyPact = [...]int16{
<<<<<<< HEAD
	265, -1000, 153, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 98, 48, -50, -51, -15, 73,
	73, 219, 45, 211, -1000, 73, 73, 73, 73, 144,
	143, 55, -40, 129, 112, -1000, -1000, -1000, -1000, -1000,
	-1000, 204, 66, 21, 69, 62, -1000, -1000, -1000, -1000,
	103, -23, -54, -1000, 68, -1000, 19, 123, 59, 204,
	-61, 204, 65, -1000, 63, -1000, 198, -1000, 161, 161,
	-1000, -1000, -1000, -1000, -1000, 4, -3, -5, -13, 204,
	57, -1000, 128, 204, -1000, -59, 97, 106, -1000, -1000,
	138, 67, -14, 15, 204, -56, 161, -1000, 56, 51,
	-1000, -1000, 123, -1000, -1000, -1000, -1000, -1000, 204, -62,
	201, -1000, -1000, -1000, 204, 204, 204, 204, -20, -1000,
	-1000, -1000, 58, -1000, 42, 42, -63, 204, -1000, -74,
	101, 40, 204, -1, 218, 14, 211, 46, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -78, 10, 217, 201, 207,
	-1000, 9, -1000, -29, -1000, 211, 204, 42, -1000, 204,
	-1000, -1000, -1000, -69, 40, 1, -1000, 78, 204, 204,
	-1000, 218, 160, -1000, -1000, -1000, -1000, 211, 176, -1000,
	-1000, 35, -1000, 6, 204, 201, -1000, -1000, -1000, 203,
	211, -1000, -1000, 218, 114, -37, -1000, -1000, -1000, 44,
	177, -1000, 92, 90, 89, -1000, 1, -1000, -1000, 64,
	-1000, 76, -1000, -1000, 159, 218, -8, 176, 211, 204,
	204, -1000, 217, -1000, -1000, 173, -1000, -1000, 161, 71,
	32, -69, -1000, -1000, -1000, -1000, 204, -38, -11, -1000,
	204, -1000, 166, -1000, -79, -1000, 204, -1000, 204, -1000,
	-1000, -1000, -1000, -1000, -1000, 204, -24, 204, -1000, -1000,
	-1000, 88, -1000, 78, -1000, -24, -1000, -1000, 204, 32,
	-1000, -1000, -1000, -1000,
}

var yyPgo = [...]int16{
	0, 308, 14, 10, 12, 307, 306, 9, 8, 0,
	5, 305, 304, 161, 151, 303, 301, 299, 298, 297,
	296, 288, 287, 277, 177, 176, 169, 160, 15, 275,
	11, 4, 274, 1, 3, 17, 273, 6, 270, 2,
	267, 265, 264, 263, 262, 261, 260, 16, 258, 256,
	13, 7, 18, 255, 254, 253, 252, 250, 248, 246,
	245, 243, 242, 241, 239, 238, 235, 234, 233, 229,
}

var yyR1 = [...]int8{
	0, 68, 69, 69, 11, 11, 11, 11, 11, 11,
	11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
	11, 11, 11, 11, 11, 10, 8, 8, 8, 9,
	5, 5, 5, 6, 6, 7, 2, 2, 2, 1,
	1, 15, 16, 52, 52, 19, 19, 19, 19, 19,
	19, 19, 19, 19, 20, 20, 20, 20, 22, 22,
	23, 40, 41, 41, 41, 29, 29, 34, 47, 47,
	31, 31, 33, 33, 32, 32, 45, 45, 44, 46,
	21, 21, 21, 21, 21, 54, 54, 54, 53, 53,
	55, 55, 17, 57, 24, 24, 49, 49, 48, 48,
	51, 51, 51, 51, 51, 51, 51, 25, 25, 28,
	28, 30, 35, 35, 36, 36, 38, 38, 38, 37,
	37, 39, 39, 3, 3, 4, 4, 26, 26, 27,
	27, 50, 50, 56, 12, 13, 14, 14, 60, 18,
	18, 61, 62, 62, 62, 66, 66, 63, 59, 58,
	42, 43, 64, 65, 65, 67,
=======
	269, -1000, 149, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
=======
	37, 0, 0, 0, 0, 0, 0, 41, 0, 42,
	0, 0, 0, 25, 26,
}

var yyPact = [...]int16{
	269, -1000, 161, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
>>>>>>> d59ef666 (minor)
=======
const yyLast = 350

var yyAct = [...]int16{
	156, 252, 215, 269, 212, 185, 206, 180, 179, 155,
	178, 171, 177, 183, 153, 170, 164, 137, 107, 266,
	267, 168, 188, 207, 208, 209, 64, 210, 167, 152,
	112, 62, 133, 66, 144, 70, 104, 60, 69, 59,
	263, 79, 233, 67, 257, 258, 259, 92, 200, 173,
	94, 214, 102, 95, 99, 103, 78, 161, 95, 141,
	124, 95, 95, 260, 245, 95, 123, 110, 111, 174,
	113, 95, 122, 68, 176, 173, 121, 225, 198, 189,
	182, 214, 142, 106, 118, 120, 97, 224, 125, 126,
	253, 234, 110, 58, 186, 174, 51, 277, 136, 139,
	165, 52, 143, 49, 186, 50, 147, 149, 91, 115,
	70, 145, 264, 53, 162, 105, 147, 241, 114, 96,
	98, 148, 157, 158, 159, 160, 146, 77, 150, 127,
	109, 100, 251, 51, 72, 140, 186, 216, 52, 175,
	49, 242, 50, 239, 238, 237, 138, 95, 101, 166,
	53, 184, 135, 108, 169, 231, 232, 65, 131, 132,
	129, 93, 48, 202, 88, 61, 204, 47, 46, 194,
	201, 87, 45, 220, 217, 218, 284, 220, 95, 44,
	203, 276, 213, 119, 243, 211, 138, 57, 221, 219,
	154, 184, 56, 55, 71, 73, 222, 54, 90, 226,
	83, 84, 85, 86, 229, 227, 281, 191, 81, 220,
	235, 230, 193, 192, 223, 117, 240, 80, 82, 81,
	228, 191, 236, 213, 95, 248, 193, 192, 80, 181,
	196, 244, 246, 75, 43, 249, 1, 197, 22, 199,
	19, 250, 255, 254, 18, 17, 261, 16, 15, 14,
	12, 13, 270, 8, 271, 9, 151, 265, 187, 134,
	205, 272, 130, 163, 274, 128, 273, 21, 89, 20,
	30, 31, 256, 279, 278, 172, 275, 280, 270, 247,
	283, 282, 33, 32, 38, 39, 262, 268, 24, 23,
	27, 28, 29, 34, 35, 6, 5, 4, 3, 40,
	7, 36, 11, 10, 76, 74, 63, 2, 195, 190,
	116, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 37, 0, 0, 0, 0,
	0, 0, 41, 0, 42, 0, 0, 0, 25, 26,
}

var yyPact = [...]int16{
	264, -1000, 164, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
>>>>>>> b252c210 (fixes after review)
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 92, 55, -47, -49, -15, 88, 88,
	229, 52, 204, -1000, 88, 88, 88, 88, 149, 142,
	60, -32, 131, -1000, -1000, -1000, -1000, -1000, -1000, 220,
	71, 25, 73, 61, -1000, -1000, -1000, -1000, 105, -20,
	-51, -1000, 68, -1000, 22, 120, 58, 220, -59, 220,
	70, -1000, 62, -1000, 207, -1000, 169, 169, -1000, -1000,
	-1000, -1000, -1000, 8, 3, -3, -10, 220, 57, -1000,
	124, 220, -1000, -56, 110, -1000, -1000, 143, 67, -11,
	18, 220, -53, 169, -1000, 54, 49, -1000, -1000, 120,
	-1000, -1000, -1000, -1000, -1000, 220, -60, 174, -1000, -1000,
	-1000, 220, 220, 220, 220, -16, -1000, -1000, -1000, 65,
	-1000, 51, 51, -61, -1000, -72, 103, 33, 220, 6,
	215, 16, 204, 53, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -76, 12, 217, 174, 226, -1000, 11, -1000, -28,
	-1000, 204, 220, 51, -1000, 220, -1000, -1000, -67, 33,
	7, -1000, 93, 220, 220, -1000, 215, 165, -1000, -1000,
	-1000, -1000, 204, 202, -1000, -1000, 35, -1000, 10, 220,
	174, -1000, -1000, -1000, 203, 204, -1000, -1000, 215, 116,
	-35, -1000, -1000, -1000, 43, 210, -1000, 101, 100, 99,
	-1000, 7, -1000, -1000, 69, -1000, 96, -1000, -1000, 161,
	215, -5, 202, 204, 220, 220, -1000, 217, -1000, -1000,
	197, -1000, -1000, 169, 86, 36, -67, -1000, -1000, -1000,
	-1000, 220, -37, -6, -1000, 220, -1000, 28, -1000, -77,
	-1000, 220, -1000, 220, -1000, -1000, -1000, -1000, -1000, -1000,
	220, -23, -1000, 220, 167, -1000, -1000, -1000, 85, -1000,
	93, -1000, -23, -1000, -1000, 194, -1000, 220, 36, -1000,
	-1000, 162, -1000, -1000, -1000,
}

var yyPgo = [...]int16{
	0, 310, 14, 10, 12, 309, 308, 9, 8, 0,
	7, 307, 306, 165, 157, 305, 304, 303, 302, 300,
	298, 297, 296, 295, 172, 168, 167, 162, 15, 287,
	11, 5, 286, 279, 276, 1, 3, 17, 275, 2,
	272, 4, 269, 268, 267, 265, 263, 262, 16, 260,
	259, 13, 6, 18, 258, 257, 256, 255, 253, 251,
	250, 249, 248, 247, 245, 244, 240, 239, 238, 236,
	234,
}

var yyR1 = [...]int8{
	0, 69, 70, 70, 11, 11, 11, 11, 11, 11,
	11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
	11, 11, 11, 11, 10, 8, 8, 8, 9, 5,
	5, 5, 6, 6, 7, 2, 2, 2, 1, 1,
	15, 16, 53, 53, 19, 19, 19, 19, 19, 19,
	19, 19, 19, 20, 20, 20, 20, 22, 22, 23,
<<<<<<< HEAD
	42, 43, 43, 43, 29, 29, 36, 48, 48, 48,
	31, 31, 32, 32, 35, 35, 33, 33, 34, 34,
	46, 46, 45, 47, 21, 21, 21, 21, 21, 55,
	55, 55, 54, 54, 56, 56, 17, 58, 24, 24,
	50, 50, 49, 49, 52, 52, 52, 52, 52, 52,
	52, 25, 25, 28, 28, 30, 37, 37, 38, 38,
	40, 40, 40, 39, 39, 41, 41, 3, 3, 4,
	4, 26, 26, 27, 27, 51, 51, 57, 12, 13,
	14, 14, 61, 18, 18, 62, 63, 63, 63, 67,
	67, 64, 60, 59, 44, 65, 66, 66, 68,
>>>>>>> 732e79a8 (initial)
=======
	42, 43, 43, 43, 29, 29, 36, 48, 48, 31,
	31, 32, 32, 35, 35, 33, 33, 34, 34, 46,
	46, 45, 47, 21, 21, 21, 21, 21, 55, 55,
	55, 54, 54, 56, 56, 17, 58, 24, 24, 50,
	50, 49, 49, 52, 52, 52, 52, 52, 52, 52,
	25, 25, 28, 28, 30, 37, 37, 38, 38, 40,
	40, 40, 39, 39, 41, 41, 3, 3, 4, 4,
	26, 26, 27, 27, 51, 51, 57, 12, 13, 14,
	14, 61, 18, 18, 62, 63, 63, 63, 67, 67,
	64, 60, 59, 44, 65, 66, 66, 68,
>>>>>>> b252c210 (fixes after review)
}

var yyR2 = [...]int8{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
<<<<<<< HEAD
	1, 1, 1, 1, 1, 1, 3, 3, 3, 0,
	2, 1, 1, 1, 0, 2, 4, 2, 4, 3,
	4, 3, 3, 3, 2, 2, 2, 2, 4, 4,
	3, 2, 2, 4, 2, 3, 1, 2, 7, 4,
	3, 0, 2, 0, 1, 3, 1, 2, 2, 2,
	2, 2, 2, 2, 5, 1, 1, 0, 4, 0,
	3, 0, 5, 2, 3, 2, 3, 0, 3, 1,
	1, 2, 1, 1, 2, 2, 1, 6, 5, 1,
	2, 2, 2, 0, 2, 2, 1, 1, 1, 3,
	0, 3, 0, 1, 1, 1, 3, 9, 8, 5,
	4, 1, 3, 2, 3, 3, 2, 2, 6, 3,
	3, 4, 5, 6, 6, 3, 0, 4, 2, 1,
	2, 4, 5, 3, 3, 4,
}

var yyChk = [...]int16{
	-1000, -68, -11, -20, -21, -22, -23, -19, -57, -56,
	-17, -18, -59, -58, -60, -61, -62, -63, -64, -65,
	-40, -42, -67, -43, 25, 24, 86, 87, 26, 27,
	28, 6, 7, 19, 18, 29, 30, 37, 72, 20,
	21, 35, 79, 82, 81, -69, 15, -24, -25, -26,
	-27, 49, 51, 41, 47, 59, -24, -25, -26, -27,
	38, 88, 88, -13, 47, -12, 41, -14, 49, 59,
	90, 54, 51, -13, 47, -13, -15, 4, -16, 76,
	4, -8, 13, 4, 14, -13, -13, -13, -13, 22,
	22, -41, -14, 49, 80, 30, 38, -9, 4, 49,
	62, 48, -9, 71, 43, 73, 76, 89, 48, 62,
	-52, 33, 73, -9, -9, 91, -9, 49, 48, -1,
	8, -10, 14, -10, 69, 70, 70, 71, -9, -9,
	73, -44, 36, -46, 34, 35, 90, 44, -49, 42,
	-9, -35, 43, -9, 69, 71, 65, -9, 89, -10,
	73, -9, 73, -9, -52, -55, 91, -2, 16, -7,
	-9, -9, -9, -9, -9, 74, 50, -45, -47, 50,
	-47, 91, -9, 95, -35, -28, -30, -36, 42, 63,
	-9, 69, -4, -3, -8, -10, 14, 65, -50, -8,
	-31, 52, -53, 100, 68, -5, 4, 10, 9, -2,
	-6, 4, 11, 68, -66, 77, -8, -9, -47, -9,
	-48, -51, 92, 93, 94, 96, -28, -39, -30, 75,
	-37, 45, -9, -9, -4, 12, 23, -50, 12, 53,
	68, -7, -2, 17, -8, -4, 39, 40, 78, 49,
	-31, 12, 45, 45, 45, -39, 49, 46, 23, -3,
	70, -8, -32, -9, -7, -10, 47, -33, 55, -51,
	-9, -38, 83, 84, 85, 70, -9, 12, -54, 98,
	99, -29, -34, -9, -9, -9, -39, -9, 12, -31,
	-37, -39, -34, -33,
=======
	1, 1, 1, 1, 1, 3, 3, 3, 0, 2,
	1, 1, 1, 0, 2, 4, 2, 4, 3, 4,
	3, 3, 3, 2, 2, 2, 2, 4, 4, 3,
	2, 2, 4, 2, 3, 1, 2, 7, 4, 4,
	0, 2, 0, 2, 0, 1, 3, 3, 1, 1,
	2, 2, 2, 2, 2, 2, 2, 5, 1, 1,
	0, 4, 0, 3, 0, 5, 2, 3, 2, 3,
	0, 3, 1, 1, 2, 1, 1, 2, 2, 1,
	6, 5, 1, 2, 2, 2, 0, 2, 2, 1,
	1, 1, 3, 0, 3, 0, 1, 1, 1, 3,
	9, 8, 5, 4, 1, 3, 2, 3, 3, 2,
	2, 6, 3, 3, 4, 5, 6, 6, 3, 0,
	4, 2, 1, 2, 5, 3, 3, 4,
}

var yyChk = [...]int16{
	-1000, -69, -11, -20, -21, -22, -23, -19, -58, -57,
	-17, -18, -60, -59, -61, -62, -63, -64, -65, -66,
	-42, -44, -68, 25, 24, 84, 85, 26, 27, 28,
	6, 7, 19, 18, 29, 30, 37, 71, 20, 21,
	35, 78, 80, -70, 15, -24, -25, -26, -27, 48,
	50, 41, 46, 58, -24, -25, -26, -27, 38, 86,
	86, -13, 46, -12, 41, -14, 48, 58, 88, 53,
	50, -13, 46, -13, -15, 4, -16, 75, 4, -8,
	13, 4, 14, -13, -13, -13, -13, 22, 22, -43,
	-14, 48, 79, 30, -9, 4, 48, 61, 47, -9,
	70, 43, 72, 75, 87, 47, 61, -53, 33, 72,
	-9, -9, 89, -9, 48, 47, -1, 8, -10, 14,
	-10, 68, 69, 69, 70, -9, -9, 72, -45, 36,
	-47, 34, 35, 88, -50, 42, -9, -37, 43, -9,
	68, 70, 64, -9, 87, -10, 72, -9, 72, -9,
	-53, -56, 89, -2, 16, -7, -9, -9, -9, -9,
	-9, 73, 49, -46, -48, 49, -48, 89, 93, -37,
	-28, -30, -38, 42, 62, -9, 68, -4, -3, -8,
	-10, 14, 64, -51, -8, -31, 51, -54, 98, 67,
	-5, 4, 10, 9, -2, -6, 4, 11, 67, -67,
	76, -8, -9, -48, -9, -49, -52, 90, 91, 92,
	94, -28, -41, -30, 74, -39, 44, -9, -9, -4,
<<<<<<< HEAD
	12, 23, -51, 12, -32, 84, 52, 67, -7, -2,
	17, -8, -4, 39, 40, 77, 48, -31, 12, 44,
	44, 44, -41, 48, 45, 23, -3, 69, -8, -34,
	14, -33, -9, -7, -10, 46, -35, 54, -52, -9,
	-40, 81, 82, 83, 69, -9, 12, 12, -55, 96,
	97, -29, -36, -9, -9, -9, -41, 14, -9, 12,
	-31, -39, -41, -36, -32, -35, -35,
>>>>>>> 732e79a8 (initial)
=======
	12, 23, -51, 12, 52, 67, -7, -2, 17, -8,
	-4, 39, 40, 77, 48, -31, 12, 44, 44, 44,
	-41, 48, 45, 23, -3, 69, -8, -33, -9, -7,
	-10, 46, -35, 54, -52, -9, -40, 81, 82, 83,
	69, -9, -32, 12, 84, -55, 96, 97, -29, -36,
	-9, -9, -9, -41, -9, -34, 14, 12, -31, -39,
	-41, 12, -36, -35, 14,
>>>>>>> b252c210 (fixes after review)
}

var yyDef = [...]int16{
	0, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
<<<<<<< HEAD
	21, 22, 23, 24, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 149, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1, 3, 54, 55, 56,
	57, 0, 0, 0, 0, 0, 80, 81, 82, 83,
	0, 0, 0, 45, 0, 47, 0, 44, 0, 0,
	0, 0, 0, 93, 0, 133, 39, 41, 0, 0,
	42, 148, 26, 27, 28, 0, 0, 0, 0, 0,
	0, 61, 0, 0, 150, 0, 0, 97, 29, 95,
	113, 0, 0, 0, 0, 0, 0, 60, 0, 0,
	49, 43, 44, 136, 51, 52, 53, 137, 0, 91,
	0, 139, 25, 140, 0, 0, 0, 0, 0, 153,
	154, 62, 0, 64, 0, 0, 0, 0, 94, 0,
	113, 0, 0, 0, 0, 0, 0, 71, 58, 59,
	46, 135, 48, 134, 50, 89, 0, 40, 0, 0,
	35, 0, 141, 146, 147, 0, 0, 78, 76, 0,
	79, 155, 151, 0, 0, 122, 109, 120, 0, 0,
	112, 0, 0, 125, 123, 124, 25, 0, 130, 131,
	84, 0, 92, 0, 0, 0, 30, 31, 32, 0,
	0, 33, 34, 0, 142, 0, 152, 63, 77, 71,
	96, 99, 100, 102, 103, 106, 122, 108, 110, 0,
	111, 0, 114, 115, 0, 0, 0, 129, 0, 0,
	0, 90, 38, 36, 37, 138, 143, 144, 0, 0,
	73, 0, 101, 104, 105, 107, 0, 0, 0, 126,
	0, 132, 70, 74, 87, 145, 0, 69, 0, 98,
	121, 119, 116, 117, 118, 0, 122, 0, 88, 85,
	86, 71, 66, 120, 72, 122, 128, 75, 0, 73,
	67, 127, 65, 68,
=======
	21, 22, 23, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 152, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1, 3, 53, 54, 55, 56, 0,
	0, 0, 0, 0, 83, 84, 85, 86, 0, 0,
	0, 44, 0, 46, 0, 43, 0, 0, 0, 0,
	0, 96, 0, 136, 38, 40, 0, 0, 41, 151,
	25, 26, 27, 0, 0, 0, 0, 0, 0, 60,
	0, 0, 153, 0, 100, 28, 98, 116, 0, 0,
	0, 0, 0, 0, 59, 0, 0, 48, 42, 43,
<<<<<<< HEAD
	140, 50, 51, 52, 141, 0, 95, 0, 143, 24,
	144, 0, 0, 0, 0, 0, 156, 157, 61, 0,
	63, 0, 0, 0, 98, 0, 117, 0, 0, 0,
	0, 0, 0, 71, 57, 58, 45, 139, 47, 138,
	49, 93, 0, 39, 0, 0, 34, 0, 145, 150,
	151, 0, 0, 82, 80, 0, 83, 158, 0, 0,
	126, 113, 124, 0, 0, 116, 0, 0, 129, 127,
	128, 24, 0, 134, 135, 73, 0, 96, 0, 0,
	0, 29, 30, 31, 0, 0, 32, 33, 0, 146,
	0, 155, 62, 81, 71, 100, 103, 104, 106, 107,
	110, 126, 112, 114, 0, 115, 0, 118, 119, 0,
	0, 0, 133, 0, 88, 0, 0, 0, 94, 37,
	35, 36, 142, 147, 148, 0, 0, 75, 0, 105,
	108, 109, 111, 0, 0, 0, 130, 0, 136, 72,
	79, 70, 76, 91, 149, 0, 69, 0, 102, 125,
	123, 120, 121, 122, 0, 126, 0, 0, 92, 89,
	90, 71, 65, 124, 74, 126, 132, 78, 77, 0,
	73, 66, 131, 64, 75, 68, 67,
>>>>>>> 732e79a8 (initial)
=======
	139, 50, 51, 52, 140, 0, 94, 0, 142, 24,
	143, 0, 0, 0, 0, 0, 155, 156, 61, 0,
	63, 0, 0, 0, 97, 0, 116, 0, 0, 0,
	0, 0, 0, 70, 57, 58, 45, 138, 47, 137,
	49, 92, 0, 39, 0, 0, 34, 0, 144, 149,
	150, 0, 0, 81, 79, 0, 82, 157, 0, 0,
	125, 112, 123, 0, 0, 115, 0, 0, 128, 126,
	127, 24, 0, 133, 134, 87, 0, 95, 0, 0,
	0, 29, 30, 31, 0, 0, 32, 33, 0, 145,
	0, 154, 62, 80, 70, 99, 102, 103, 105, 106,
	109, 125, 111, 113, 0, 114, 0, 117, 118, 0,
	0, 0, 132, 0, 0, 0, 93, 37, 35, 36,
	141, 146, 147, 0, 0, 74, 0, 104, 107, 108,
	110, 0, 0, 0, 129, 0, 135, 72, 75, 90,
	148, 0, 68, 0, 101, 124, 122, 119, 120, 121,
	0, 125, 69, 0, 0, 91, 88, 89, 70, 65,
	123, 73, 125, 131, 76, 71, 78, 0, 74, 66,
	130, 0, 64, 67, 77,
>>>>>>> b252c210 (fixes after review)
}

var yyTok1 = [...]int8{
	1,
}

var yyTok2 = [...]int8{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
<<<<<<< HEAD
<<<<<<< HEAD
	92, 93, 94, 95, 96, 97, 98, 99, 100,
=======
	92, 93, 94, 95, 96, 97, 98, 99,
>>>>>>> 732e79a8 (initial)
=======
	92, 93, 94, 95, 96, 97, 98,
>>>>>>> d59ef666 (minor)
}

var yyTok3 = [...]int8{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := int(yyPact[state])
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && int(yyChk[int(yyAct[n])]) == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || int(yyExca[i+1]) != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := int(yyExca[i])
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = int(yyTok1[0])
		goto out
	}
	if char < len(yyTok1) {
		token = int(yyTok1[char])
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = int(yyTok2[char-yyPrivate])
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = int(yyTok3[i+0])
		if token == char {
			token = int(yyTok3[i+1])
			goto out
		}
	}

out:
	if token == 0 {
		token = int(yyTok2[1]) /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = int(yyPact[yystate])
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = int(yyAct[yyn])
	if int(yyChk[yyn]) == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = int(yyDef[yystate])
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && int(yyExca[xi+1]) == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = int(yyExca[xi+0])
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = int(yyExca[xi+1])
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = int(yyPact[yyS[yyp].yys]) + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = int(yyAct[yyn]) /* simulate a shift of "error" */
					if int(yyChk[yystate]) == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= int(yyR2[yyn])
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = int(yyR1[yyn])
	yyg := int(yyPgo[yyn])
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = int(yyAct[yyg])
	} else {
		yystate = int(yyAct[yyj])
		if int(yyChk[yystate]) != -yyn {
			yystate = int(yyAct[yyg])
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:257
=======
//line gram.y:256
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:257
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:258
>>>>>>> b252c210 (fixes after review)
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:258
=======
//line gram.y:257
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:258
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:259
>>>>>>> b252c210 (fixes after review)
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:263
=======
//line gram.y:262
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:263
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:264
>>>>>>> b252c210 (fixes after review)
		{
			setParseTree(yylex, yyDollar[1].create)
		}
	case 5:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:267
=======
//line gram.y:266
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:267
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:268
>>>>>>> b252c210 (fixes after review)
		{
			setParseTree(yylex, yyDollar[1].create)
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:271
=======
//line gram.y:270
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:271
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:272
>>>>>>> b252c210 (fixes after review)
		{
			setParseTree(yylex, yyDollar[1].trace)
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:275
=======
//line gram.y:274
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:275
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:276
>>>>>>> b252c210 (fixes after review)
		{
			setParseTree(yylex, yyDollar[1].stoptrace)
		}
	case 8:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:279
=======
//line gram.y:278
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:279
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:280
>>>>>>> b252c210 (fixes after review)
		{
			setParseTree(yylex, yyDollar[1].drop)
		}
	case 9:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:283
=======
//line gram.y:282
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:283
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:284
>>>>>>> b252c210 (fixes after review)
		{
			setParseTree(yylex, yyDollar[1].lock)
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:287
=======
//line gram.y:286
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:287
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:288
>>>>>>> b252c210 (fixes after review)
		{
			setParseTree(yylex, yyDollar[1].unlock)
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:291
=======
//line gram.y:290
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:291
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:292
>>>>>>> b252c210 (fixes after review)
		{
			setParseTree(yylex, yyDollar[1].show)
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:295
=======
//line gram.y:294
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:295
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:296
>>>>>>> b252c210 (fixes after review)
		{
			setParseTree(yylex, yyDollar[1].kill)
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:299
=======
//line gram.y:298
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:299
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:300
>>>>>>> b252c210 (fixes after review)
		{
			setParseTree(yylex, yyDollar[1].listen)
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:303
=======
//line gram.y:302
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:303
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:304
>>>>>>> b252c210 (fixes after review)
		{
			setParseTree(yylex, yyDollar[1].shutdown)
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:307
=======
//line gram.y:306
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:307
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:308
>>>>>>> b252c210 (fixes after review)
		{
			setParseTree(yylex, yyDollar[1].split)
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:311
=======
//line gram.y:310
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:311
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:312
>>>>>>> b252c210 (fixes after review)
		{
			setParseTree(yylex, yyDollar[1].move)
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:315
=======
//line gram.y:314
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:315
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:316
>>>>>>> b252c210 (fixes after review)
		{
			setParseTree(yylex, yyDollar[1].redistribute)
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:319
=======
//line gram.y:318
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:319
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:320
>>>>>>> b252c210 (fixes after review)
		{
			setParseTree(yylex, yyDollar[1].unite)
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:323
=======
//line gram.y:322
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:323
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:324
>>>>>>> b252c210 (fixes after review)
		{
			setParseTree(yylex, yyDollar[1].register_router)
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:327
=======
//line gram.y:326
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:327
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:328
>>>>>>> b252c210 (fixes after review)
		{
			setParseTree(yylex, yyDollar[1].unregister_router)
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:331
=======
//line gram.y:330
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:331
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:332
>>>>>>> b252c210 (fixes after review)
		{
			setParseTree(yylex, yyDollar[1].alter)
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:335
=======
//line gram.y:334
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:335
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:336
>>>>>>> b252c210 (fixes after review)
		{
			setParseTree(yylex, yyDollar[1].invalidate_cache)
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:339
=======
//line gram.y:338
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:339
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:340
>>>>>>> b252c210 (fixes after review)
		{
			setParseTree(yylex, yyDollar[1].retryMoveTaskGroup)
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:345
		{
			setParseTree(yylex, yyDollar[1].sync_reference_tables)
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:350
		{
			yyVAL.uinteger = uint(yyDollar[1].uinteger)
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:353
=======
//line gram.y:352
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:353
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:354
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:357
=======
//line gram.y:354
=======
//line gram.y:355
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:356
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.str = strconv.Itoa(int(yyDollar[1].uinteger))
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:359
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:360
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:361
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:359
		{
			yyVAL.str = strconv.Itoa(int(yyDollar[1].uinteger))
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:364
=======
//line gram.y:365
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:366
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:367
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:370
=======
//line gram.y:367
=======
//line gram.y:368
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:369
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.str = "AND"
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:371
		{
			yyVAL.str = "OR"
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:374
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:375
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:376
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.str = yyDollar[1].str
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:372
		{
			yyVAL.str = "AND"
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:378
		{
			yyVAL.str = "OR"
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:379
		{
			yyVAL.str = yyDollar[1].str
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:381
		{
			yyVAL.str = "="
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:387
=======
//line gram.y:382
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:383
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:384
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.colref = ColumnRef{
				ColName: yyDollar[1].str,
			}
		}
	case 36:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:395
=======
//line gram.y:390
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:391
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:392
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.where = yyDollar[2].where
		}
	case 37:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:398
=======
//line gram.y:393
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:394
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:395
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.where = WhereClauseLeaf{
				ColRef: yyDollar[1].colref,
				Op:     yyDollar[2].str,
				Value:  yyDollar[3].str,
			}
		}
	case 38:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:406
=======
//line gram.y:401
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:402
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:403
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.where = WhereClauseOp{
				Op:    yyDollar[2].str,
				Left:  yyDollar[1].where,
				Right: yyDollar[3].where,
			}
		}
	case 39:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:416
=======
//line gram.y:411
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:412
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:413
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.where = WhereClauseEmpty{}
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:420
=======
//line gram.y:415
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:416
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:417
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.where = yyDollar[2].where
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:427
=======
//line gram.y:422
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:423
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:424
>>>>>>> b252c210 (fixes after review)
		{
			switch v := strings.ToLower(string(yyDollar[1].str)); v {
			case DatabasesStr, RoutersStr, PoolsStr, InstanceStr, ShardsStr, BackendConnectionsStr, KeyRangesStr, ShardingRules, ClientsStr, StatusStr, DistributionsStr, VersionStr, RelationsStr, TaskGroupStr, PreparedStatementsStr, QuantilesStr, SequencesStr, IsReadOnlyStr:
				yyVAL.str = v
			default:
				yyVAL.str = UnsupportedStr
			}
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:438
=======
//line gram.y:433
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:434
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:435
>>>>>>> b252c210 (fixes after review)
		{
			switch v := string(yyDollar[1].str); v {
			case ClientStr:
				yyVAL.str = v
			default:
				yyVAL.str = UnsupportedStr
			}
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:448
=======
//line gram.y:443
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:444
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:445
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.bool = true
		}
	case 44:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:448
=======
//line gram.y:443
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:444
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:445
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.bool = false
		}
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:452
=======
//line gram.y:447
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:448
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:449
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.drop = &Drop{Element: yyDollar[2].key_range_selector}
		}
	case 46:
		yyDollar = yyS[yypt-4 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:456
=======
//line gram.y:451
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:452
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:453
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.drop = &Drop{Element: &KeyRangeSelector{KeyRangeID: `*`}}
		}
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:460
=======
//line gram.y:455
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:456
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:457
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.drop = &Drop{Element: yyDollar[2].sharding_rule_selector}
		}
	case 48:
		yyDollar = yyS[yypt-4 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:464
=======
//line gram.y:459
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:460
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:461
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.drop = &Drop{Element: &ShardingRuleSelector{ID: `*`}}
		}
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:468
=======
//line gram.y:463
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:464
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:465
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.drop = &Drop{Element: yyDollar[2].distribution_selector, CascadeDelete: yyDollar[3].bool}
		}
	case 50:
		yyDollar = yyS[yypt-4 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:472
=======
//line gram.y:467
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:468
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:469
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.drop = &Drop{Element: &DistributionSelector{ID: `*`}, CascadeDelete: yyDollar[4].bool}
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:476
=======
//line gram.y:471
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:472
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:473
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.drop = &Drop{Element: &ShardSelector{ID: yyDollar[3].str}}
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:480
=======
//line gram.y:475
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:476
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:477
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.drop = &Drop{Element: &TaskGroupSelector{}}
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:484
=======
//line gram.y:479
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:480
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:481
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.drop = &Drop{Element: &SequenceSelector{Name: yyDollar[3].str}}
		}
	case 54:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:491
=======
//line gram.y:486
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:487
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:488
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.create = &Create{Element: yyDollar[2].ds}
		}
	case 55:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:496
=======
//line gram.y:491
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:492
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:493
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.create = &Create{Element: yyDollar[2].sharding_rule}
		}
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:501
=======
//line gram.y:496
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:497
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:498
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.create = &Create{Element: yyDollar[2].kr}
		}
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:505
=======
//line gram.y:500
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:501
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:502
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.create = &Create{Element: yyDollar[2].shard}
		}
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:511
=======
//line gram.y:506
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:507
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:508
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.trace = &TraceStmt{All: true}
		}
	case 59:
		yyDollar = yyS[yypt-4 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:514
=======
//line gram.y:509
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:510
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:511
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.trace = &TraceStmt{
				Client: yyDollar[4].uinteger,
			}
		}
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:522
=======
//line gram.y:517
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:518
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:519
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.stoptrace = &StopTraceStmt{}
		}
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:528
=======
//line gram.y:523
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:524
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:525
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.alter = &Alter{Element: yyDollar[2].alter_distribution}
		}
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:534
=======
//line gram.y:529
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:530
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:531
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.alter_distribution = &AlterDistribution{
				Element: &AttachRelation{
					Distribution: yyDollar[1].distribution_selector,
					Relations:    yyDollar[2].relations,
				},
			}
		}
	case 63:
		yyDollar = yyS[yypt-4 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:543
=======
//line gram.y:538
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:539
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:540
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.alter_distribution = &AlterDistribution{
				Element: &DetachRelation{
					Distribution: yyDollar[1].distribution_selector,
					RelationName: yyDollar[4].str,
				},
			}
		}
	case 64:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:552
=======
//line gram.y:547
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:548
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:549
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.alter_distribution = &AlterDistribution{
				Element: &AlterRelation{
					Distribution: yyDollar[1].distribution_selector,
					Relation:     yyDollar[2].distributed_relation,
				},
			}
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:564
=======
//line gram.y:559
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:560
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:561
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.dEntrieslist = append(yyDollar[1].dEntrieslist, yyDollar[3].distrKeyEntry)
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:566
=======
//line gram.y:561
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:562
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:563
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.dEntrieslist = []DistributionKeyEntry{
				yyDollar[1].distrKeyEntry,
			}
		}
	case 67:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:576
=======
//line gram.y:571
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:572
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:573
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.distrKeyEntry = DistributionKeyEntry{
				Column:       yyDollar[1].str,
				HashFunction: yyDollar[2].str,
			}
		}
<<<<<<< HEAD
	case 68:
		yyDollar = yyS[yypt-7 : yypt+1]
//line gram.y:585
=======
	case 67:
<<<<<<< HEAD
		yyDollar = yyS[yypt-8 : yypt+1]
<<<<<<< HEAD
//line gram.y:580
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:581
>>>>>>> 7ecc9870 (fix unittest)
=======
		yyDollar = yyS[yypt-7 : yypt+1]
//line gram.y:582
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.distributed_relation = &DistributedRelation{
				Name:            yyDollar[2].str,
				DistributionKey: yyDollar[5].dEntrieslist,
				AutoIncrement:   yyDollar[6].autoincrement,
				SchemaName:      yyDollar[7].str,
			}
		}
<<<<<<< HEAD
	case 69:
		yyDollar = yyS[yypt-4 : yypt+1]
//line gram.y:594
=======
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
//line gram.y:591
		{
			yyVAL.distributed_relation = &DistributedRelation{
				Name:               yyDollar[2].str,
				ReplicatedRelation: true,
				AutoIncrement:      yyDollar[3].autoincrement,
				SchemaName:         yyDollar[4].str,
			}
		}
	case 69:
		yyDollar = yyS[yypt-4 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:599
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:600
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:602
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.autoincrement = &AutoIncrement{
				Columns: yyDollar[3].strlist,
				Starts:  yyDollar[4].uintegerlist,
			}
		}
	case 70:
<<<<<<< HEAD
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:605
=======
//line gram.y:610
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:611
>>>>>>> 7ecc9870 (fix unittest)
=======
		yyDollar = yyS[yypt-0 : yypt+1]
//line gram.y:607
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.autoincrement = &AutoIncrement{}
		}
	case 71:
<<<<<<< HEAD
<<<<<<< HEAD
=======
		yyDollar = yyS[yypt-0 : yypt+1]
//line gram.y:613
		{
			yyVAL.strlist = nil
		}
	case 72:
=======
>>>>>>> b252c210 (fixes after review)
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:612
		{
			yyVAL.uintegerlist = yyDollar[2].uintegerlist
		}
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
//line gram.y:614
		{
			yyVAL.uintegerlist = nil
		}
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:619
		{
			yyVAL.str = yyDollar[2].str
		}
<<<<<<< HEAD
	case 75:
>>>>>>> 732e79a8 (initial)
=======
	case 74:
>>>>>>> b252c210 (fixes after review)
		yyDollar = yyS[yypt-0 : yypt+1]
//line gram.y:621
		{
			yyVAL.strlist = nil
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:612
		{
			yyVAL.str = yyDollar[2].str
		}
<<<<<<< HEAD
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
//line gram.y:614
		{
			yyVAL.str = ""
		}
<<<<<<< HEAD
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:619
		{
			yyVAL.strlist = []string{yyDollar[1].str}
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:621
		{
			yyVAL.strlist = append(yyDollar[1].strlist, yyDollar[3].str)
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:627
		{
			yyVAL.relations = []*DistributedRelation{yyDollar[1].distributed_relation}
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:629
		{
			yyVAL.relations = append(yyDollar[1].relations, yyDollar[2].distributed_relation)
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:634
		{
			yyVAL.relations = yyDollar[2].relations
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:639
		{
			yyVAL.distributed_relation = yyDollar[2].distributed_relation
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:645
=======
	case 76:
=======
	case 75:
>>>>>>> b252c210 (fixes after review)
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:626
		{
			yyVAL.strlist = []string{yyDollar[1].str}
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:628
		{
			yyVAL.strlist = append(yyDollar[1].strlist, yyDollar[3].str)
		}
<<<<<<< HEAD
	case 78:
<<<<<<< HEAD
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:638
>>>>>>> 732e79a8 (initial)
=======
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:639
>>>>>>> 7ecc9870 (fix unittest)
=======
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:633
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.uintegerlist = append(yyDollar[1].uintegerlist, uint(yyDollar[3].uinteger))
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:635
		{
			yyVAL.uintegerlist = []uint{uint(yyDollar[1].uinteger)}
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:641
		{
<<<<<<< HEAD
			yyVAL.uintegerlist = []uint{uint(yyDollar[1].uinteger)}
		}
<<<<<<< HEAD
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:650
=======
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line gram.y:646
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:647
>>>>>>> 7ecc9870 (fix unittest)
		{
			yyVAL.relations = []*DistributedRelation{yyDollar[1].distributed_relation}
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
//line gram.y:655
=======
//line gram.y:649
>>>>>>> 7ecc9870 (fix unittest)
		{
			yyVAL.relations = append(yyDollar[1].relations, yyDollar[2].distributed_relation)
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
//line gram.y:660
=======
//line gram.y:654
>>>>>>> 7ecc9870 (fix unittest)
		{
			yyVAL.relations = yyDollar[2].relations
		}
<<<<<<< HEAD
	case 84:
		yyDollar = yyS[yypt-5 : yypt+1]
//line gram.y:665
=======
=======
			yyVAL.relations = []*DistributedRelation{yyDollar[1].distributed_relation}
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:643
		{
			yyVAL.relations = append(yyDollar[1].relations, yyDollar[2].distributed_relation)
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:648
		{
			yyVAL.relations = yyDollar[2].relations
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:653
		{
			yyVAL.distributed_relation = yyDollar[2].distributed_relation
		}
>>>>>>> b252c210 (fixes after review)
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
//line gram.y:658
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:659
>>>>>>> 7ecc9870 (fix unittest)
		{
			yyVAL.create = &Create{Element: yyDollar[2].ds}
		}
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:664
		{
			yyVAL.create = &Create{Element: yyDollar[2].sharding_rule}
		}
	case 85:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:669
		{
			yyVAL.create = &Create{Element: yyDollar[2].kr}
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:674
		{
			yyVAL.create = &Create{Element: yyDollar[2].shard}
		}
	case 87:
		yyDollar = yyS[yypt-5 : yypt+1]
//line gram.y:679
		{
			yyVAL.create = &Create{
				Element: &ReferenceRelationDefinition{
					TableName:     yyDollar[4].str,
					AutoIncrement: yyDollar[5].autoincrement,
				},
			}
		}
<<<<<<< HEAD
<<<<<<< HEAD
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:675
		{
			yyVAL.opt_asc_desc = &SortByAsc{}
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:676
		{
			yyVAL.opt_asc_desc = &SortByDesc{}
		}
	case 87:
=======
	case 89:
=======
	case 88:
>>>>>>> b252c210 (fixes after review)
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:689
		{
			yyVAL.opt_asc_desc = &SortByAsc{}
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:690
		{
			yyVAL.opt_asc_desc = &SortByDesc{}
		}
	case 90:
		yyDollar = yyS[yypt-0 : yypt+1]
//line gram.y:691
		{
			yyVAL.opt_asc_desc = &SortByDefault{}
		}
	case 91:
		yyDollar = yyS[yypt-4 : yypt+1]
//line gram.y:695
		{
			yyVAL.order_clause = &Order{Col: yyDollar[3].colref, OptAscDesc: yyDollar[4].opt_asc_desc}
		}
<<<<<<< HEAD
	case 93:
>>>>>>> 732e79a8 (initial)
=======
	case 92:
>>>>>>> b252c210 (fixes after review)
		yyDollar = yyS[yypt-0 : yypt+1]
//line gram.y:698
		{
			yyVAL.opt_asc_desc = &SortByDefault{}
		}
	case 88:
		yyDollar = yyS[yypt-4 : yypt+1]
//line gram.y:681
		{
			yyVAL.order_clause = &Order{Col: yyDollar[3].colref, OptAscDesc: yyDollar[4].opt_asc_desc}
		}
<<<<<<< HEAD
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
//line gram.y:684
		{
			yyVAL.order_clause = OrderClause(nil)
		}
<<<<<<< HEAD
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:689
		{
			yyVAL.group_clause = GroupBy{Col: yyDollar[3].colref}
		}
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
//line gram.y:692
		{
			yyVAL.group_clause = GroupByClauseEmpty{}
		}
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
//line gram.y:697
		{
			yyVAL.show = &Show{Cmd: yyDollar[2].str, Where: yyDollar[3].where, GroupBy: yyDollar[4].group_clause, Order: yyDollar[5].order_clause}
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:702
		{
			yyVAL.lock = &Lock{KeyRangeID: yyDollar[2].key_range_selector.KeyRangeID}
		}
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:710
=======
	case 94:
=======
	case 93:
>>>>>>> b252c210 (fixes after review)
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:703
		{
			yyVAL.group_clause = GroupBy{Col: yyDollar[3].colref}
		}
	case 94:
		yyDollar = yyS[yypt-0 : yypt+1]
//line gram.y:706
		{
			yyVAL.group_clause = GroupByClauseEmpty{}
		}
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
//line gram.y:711
		{
			yyVAL.show = &Show{Cmd: yyDollar[2].str, Where: yyDollar[3].where, GroupBy: yyDollar[4].group_clause, Order: yyDollar[5].order_clause}
		}
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:716
		{
			yyVAL.lock = &Lock{KeyRangeID: yyDollar[2].key_range_selector.KeyRangeID}
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:730
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:731
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:724
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.ds = &DistributionDefinition{
				ID:       yyDollar[2].str,
				ColTypes: yyDollar[3].strlist,
			}
		}
<<<<<<< HEAD
<<<<<<< HEAD
	case 95:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:717
=======
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
//line gram.y:737
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:738
>>>>>>> 7ecc9870 (fix unittest)
=======
	case 98:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:731
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.ds = &DistributionDefinition{
				Replicated: true,
			}
		}
<<<<<<< HEAD
<<<<<<< HEAD
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:725
		{
			yyVAL.strlist = yyDollar[3].strlist
		}
	case 97:
		yyDollar = yyS[yypt-0 : yypt+1]
//line gram.y:727
=======
	case 100:
=======
	case 99:
>>>>>>> b252c210 (fixes after review)
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:739
		{
			yyVAL.strlist = yyDollar[3].strlist
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:747
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:748
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:741
>>>>>>> b252c210 (fixes after review)
		{
			/* empty column types should be prohibited */
			yyVAL.strlist = nil
		}
<<<<<<< HEAD
<<<<<<< HEAD
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:733
		{
			yyVAL.strlist = append(yyDollar[1].strlist, yyDollar[3].str)
		}
	case 99:
=======
	case 102:
=======
	case 101:
>>>>>>> b252c210 (fixes after review)
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:747
		{
			yyVAL.strlist = append(yyDollar[1].strlist, yyDollar[3].str)
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:749
		{
			yyVAL.strlist = []string{
				yyDollar[1].str,
			}
		}
<<<<<<< HEAD
	case 104:
>>>>>>> 732e79a8 (initial)
=======
	case 103:
>>>>>>> b252c210 (fixes after review)
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:756
		{
			yyVAL.strlist = []string{
				yyDollar[1].str,
			}
		}
<<<<<<< HEAD
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:742
		{
			yyVAL.str = "varchar"
		}
<<<<<<< HEAD
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:744
		{
			yyVAL.str = "varchar hashed"
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:746
		{
			yyVAL.str = "integer"
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:748
=======
	case 105:
=======
	case 104:
>>>>>>> b252c210 (fixes after review)
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:758
		{
			yyVAL.str = "varchar hashed"
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:760
		{
			yyVAL.str = "integer"
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:762
		{
			yyVAL.str = "integer"
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:764
		{
			yyVAL.str = "uinteger"
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:770
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:771
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:766
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.str = "integer"
		}
	case 109:
<<<<<<< HEAD
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:750
		{
			yyVAL.str = "uinteger"
		}
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:752
		{
			yyVAL.str = "uinteger"
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:754
		{
			yyVAL.str = "uuid"
		}
	case 107:
		yyDollar = yyS[yypt-6 : yypt+1]
//line gram.y:760
		{
			yyVAL.sharding_rule = &ShardingRuleDefinition{ID: yyDollar[3].str, TableName: yyDollar[4].str, Entries: yyDollar[5].entrieslist, Distribution: yyDollar[6].str}
		}
	case 108:
		yyDollar = yyS[yypt-5 : yypt+1]
//line gram.y:765
=======
//line gram.y:772
=======
//line gram.y:773
>>>>>>> 7ecc9870 (fix unittest)
		{
			yyVAL.str = "uinteger"
		}
	case 110:
=======
>>>>>>> b252c210 (fixes after review)
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:768
		{
			yyVAL.str = "uuid"
		}
	case 110:
		yyDollar = yyS[yypt-6 : yypt+1]
//line gram.y:774
		{
			yyVAL.sharding_rule = &ShardingRuleDefinition{ID: yyDollar[3].str, TableName: yyDollar[4].str, Entries: yyDollar[5].entrieslist, Distribution: yyDollar[6].str}
		}
	case 111:
		yyDollar = yyS[yypt-5 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:785
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:786
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:779
>>>>>>> b252c210 (fixes after review)
		{
			str, err := randomHex(6)
			if err != nil {
				panic(err)
			}
			yyVAL.sharding_rule = &ShardingRuleDefinition{ID: "shrule" + str, TableName: yyDollar[3].str, Entries: yyDollar[4].entrieslist, Distribution: yyDollar[5].str}
		}
<<<<<<< HEAD
<<<<<<< HEAD
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:774
=======
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line gram.y:794
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:795
>>>>>>> 7ecc9870 (fix unittest)
=======
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:788
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.entrieslist = make([]ShardingRuleEntry, 0)
			yyVAL.entrieslist = append(yyVAL.entrieslist, yyDollar[1].shruleEntry)
		}
<<<<<<< HEAD
<<<<<<< HEAD
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:780
		{
			yyVAL.entrieslist = append(yyDollar[1].entrieslist, yyDollar[2].shruleEntry)
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:786
=======
	case 114:
=======
	case 113:
>>>>>>> b252c210 (fixes after review)
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:794
		{
			yyVAL.entrieslist = append(yyDollar[1].entrieslist, yyDollar[2].shruleEntry)
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:806
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:807
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:800
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.shruleEntry = ShardingRuleEntry{
				Column:       yyDollar[1].str,
				HashFunction: yyDollar[2].str,
			}
		}
<<<<<<< HEAD
<<<<<<< HEAD
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:795
		{
			yyVAL.str = yyDollar[2].str
		}
	case 113:
		yyDollar = yyS[yypt-0 : yypt+1]
//line gram.y:798
		{
			yyVAL.str = ""
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:802
		{
			yyVAL.str = yyDollar[2].str
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:807
		{
			yyVAL.str = yyDollar[2].str
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:813
		{
			yyVAL.str = "identity"
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:815
		{
			yyVAL.str = "murmur"
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:817
		{
			yyVAL.str = "city"
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:823
=======
=======
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:809
		{
			yyVAL.str = yyDollar[2].str
		}
>>>>>>> b252c210 (fixes after review)
	case 116:
		yyDollar = yyS[yypt-0 : yypt+1]
//line gram.y:812
		{
			yyVAL.str = ""
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:816
		{
			yyVAL.str = yyDollar[2].str
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:822
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:823
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:821
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.str = yyDollar[2].str
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:827
		{
			yyVAL.str = "identity"
		}
<<<<<<< HEAD
<<<<<<< HEAD
	case 120:
		yyDollar = yyS[yypt-0 : yypt+1]
//line gram.y:825
		{
			yyVAL.str = ""
		}
	case 121:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:830
=======
	case 121:
=======
	case 120:
>>>>>>> b252c210 (fixes after review)
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:829
		{
			yyVAL.str = "murmur"
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:831
		{
			yyVAL.str = "city"
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:837
		{
			yyVAL.str = yyDollar[3].str
		}
	case 123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line gram.y:839
		{
			yyVAL.str = ""
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:844
		{
			yyVAL.str = yyDollar[3].str
		}
	case 125:
		yyDollar = yyS[yypt-0 : yypt+1]
//line gram.y:846
		{
			yyVAL.str = "default"
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:857
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:858
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:851
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.str = yyDollar[3].str
		}
	case 122:
		yyDollar = yyS[yypt-0 : yypt+1]
//line gram.y:832
		{
			yyVAL.str = "default"
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:837
		{
			yyVAL.bytes = []byte(yyDollar[1].str)
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:840
=======
//line gram.y:860
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:861
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:854
>>>>>>> b252c210 (fixes after review)
		{
			buf := make([]byte, 8)
			binary.PutVarint(buf, int64(yyDollar[1].uinteger))
			yyVAL.bytes = buf
		}
<<<<<<< HEAD
<<<<<<< HEAD
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:847
=======
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line gram.y:867
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:868
>>>>>>> 7ecc9870 (fix unittest)
=======
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:861
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.krbound = &KeyRangeBound{
				Pivots: [][]byte{
					yyDollar[1].bytes,
				},
			}
		}
<<<<<<< HEAD
<<<<<<< HEAD
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:854
=======
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
//line gram.y:874
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:875
>>>>>>> 7ecc9870 (fix unittest)
=======
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:868
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.krbound = &KeyRangeBound{
				Pivots: append(yyDollar[1].krbound.Pivots, yyDollar[3].bytes),
			}
		}
<<<<<<< HEAD
<<<<<<< HEAD
	case 127:
		yyDollar = yyS[yypt-9 : yypt+1]
//line gram.y:863
=======
	case 131:
		yyDollar = yyS[yypt-9 : yypt+1]
<<<<<<< HEAD
//line gram.y:883
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:884
>>>>>>> 7ecc9870 (fix unittest)
=======
	case 130:
		yyDollar = yyS[yypt-9 : yypt+1]
//line gram.y:877
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.kr = &KeyRangeDefinition{
				KeyRangeID:   yyDollar[3].str,
				LowerBound:   yyDollar[5].krbound,
				ShardID:      yyDollar[8].str,
				Distribution: yyDollar[9].str,
			}
		}
<<<<<<< HEAD
<<<<<<< HEAD
	case 128:
		yyDollar = yyS[yypt-8 : yypt+1]
//line gram.y:872
=======
	case 132:
		yyDollar = yyS[yypt-8 : yypt+1]
<<<<<<< HEAD
//line gram.y:892
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:893
>>>>>>> 7ecc9870 (fix unittest)
=======
	case 131:
		yyDollar = yyS[yypt-8 : yypt+1]
//line gram.y:886
>>>>>>> b252c210 (fixes after review)
		{
			str, err := randomHex(6)
			if err != nil {
				panic(err)
			}
			yyVAL.kr = &KeyRangeDefinition{
				LowerBound:   yyDollar[4].krbound,
				ShardID:      yyDollar[7].str,
				Distribution: yyDollar[8].str,
				KeyRangeID:   "kr" + str,
			}
		}
<<<<<<< HEAD
<<<<<<< HEAD
	case 129:
		yyDollar = yyS[yypt-5 : yypt+1]
//line gram.y:887
		{
			yyVAL.shard = &ShardDefinition{Id: yyDollar[2].str, Hosts: yyDollar[5].strlist}
		}
	case 130:
		yyDollar = yyS[yypt-4 : yypt+1]
//line gram.y:892
=======
	case 133:
=======
	case 132:
>>>>>>> b252c210 (fixes after review)
		yyDollar = yyS[yypt-5 : yypt+1]
//line gram.y:901
		{
			yyVAL.shard = &ShardDefinition{Id: yyDollar[2].str, Hosts: yyDollar[5].strlist}
		}
	case 133:
		yyDollar = yyS[yypt-4 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:912
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:913
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:906
>>>>>>> b252c210 (fixes after review)
		{
			str, err := randomHex(6)
			if err != nil {
				panic(err)
			}
			yyVAL.shard = &ShardDefinition{Id: "shard" + str, Hosts: yyDollar[4].strlist}
		}
<<<<<<< HEAD
<<<<<<< HEAD
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:902
		{
			yyVAL.strlist = []string{yyDollar[1].str}
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:907
		{
			yyVAL.strlist = append(yyDollar[1].strlist, yyDollar[3].str)
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:913
		{
			yyVAL.unlock = &Unlock{KeyRangeID: yyDollar[2].key_range_selector.KeyRangeID}
		}
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:919
		{
			yyVAL.sharding_rule_selector = &ShardingRuleSelector{ID: yyDollar[3].str}
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:925
		{
			yyVAL.key_range_selector = &KeyRangeSelector{KeyRangeID: yyDollar[3].str}
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:931
		{
			yyVAL.distribution_selector = &DistributionSelector{ID: yyDollar[2].str, Replicated: false}
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:933
		{
			yyVAL.distribution_selector = &DistributionSelector{Replicated: true, ID: "REPLICATED"}
		}
	case 138:
		yyDollar = yyS[yypt-6 : yypt+1]
//line gram.y:939
		{
			yyVAL.split = &SplitKeyRange{KeyRangeID: yyDollar[2].key_range_selector.KeyRangeID, KeyRangeFromID: yyDollar[4].str, Border: yyDollar[6].krbound}
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:945
		{
			yyVAL.kill = &Kill{Cmd: yyDollar[2].str, Target: yyDollar[3].uinteger}
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:948
		{
			yyVAL.kill = &Kill{Cmd: "client", Target: yyDollar[3].uinteger}
		}
	case 141:
		yyDollar = yyS[yypt-4 : yypt+1]
//line gram.y:954
		{
			yyVAL.move = &MoveKeyRange{KeyRangeID: yyDollar[2].key_range_selector.KeyRangeID, DestShardID: yyDollar[4].str}
		}
	case 142:
		yyDollar = yyS[yypt-5 : yypt+1]
//line gram.y:960
		{
			yyVAL.redistribute = &RedistributeKeyRange{KeyRangeID: yyDollar[2].key_range_selector.KeyRangeID, DestShardID: yyDollar[4].str, BatchSize: yyDollar[5].opt_batch_size, Check: true, Apply: true}
		}
	case 143:
		yyDollar = yyS[yypt-6 : yypt+1]
//line gram.y:962
		{
			yyVAL.redistribute = &RedistributeKeyRange{KeyRangeID: yyDollar[2].key_range_selector.KeyRangeID, DestShardID: yyDollar[4].str, BatchSize: yyDollar[5].opt_batch_size, Check: true}
		}
	case 144:
		yyDollar = yyS[yypt-6 : yypt+1]
//line gram.y:964
		{
			yyVAL.redistribute = &RedistributeKeyRange{KeyRangeID: yyDollar[2].key_range_selector.KeyRangeID, DestShardID: yyDollar[4].str, BatchSize: yyDollar[5].opt_batch_size, Apply: true}
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:968
		{
			yyVAL.opt_batch_size = int(yyDollar[3].uinteger)
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line gram.y:969
		{
			yyVAL.opt_batch_size = -1
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line gram.y:973
		{
			yyVAL.unite = &UniteKeyRange{KeyRangeIDL: yyDollar[2].key_range_selector.KeyRangeID, KeyRangeIDR: yyDollar[4].str}
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:979
		{
			yyVAL.listen = &Listen{addr: yyDollar[2].str}
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:985
		{
			yyVAL.shutdown = &Shutdown{}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:991
		{
			yyVAL.invalidate_cache = &InvalidateCache{}
		}
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
//line gram.y:997
		{
			yyVAL.sync_reference_tables = &SyncReferenceTables{ShardID: yyDollar[4].str}
		}
	case 152:
		yyDollar = yyS[yypt-5 : yypt+1]
//line gram.y:1005
		{
			yyVAL.register_router = &RegisterRouter{ID: yyDollar[3].str, Addr: yyDollar[5].str}
		}
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:1011
		{
			yyVAL.unregister_router = &UnregisterRouter{ID: yyDollar[3].str}
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:1016
		{
			yyVAL.unregister_router = &UnregisterRouter{ID: `*`}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line gram.y:1024
=======
	case 135:
=======
	case 134:
>>>>>>> b252c210 (fixes after review)
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:916
		{
			yyVAL.strlist = []string{yyDollar[1].str}
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:921
		{
			yyVAL.strlist = append(yyDollar[1].strlist, yyDollar[3].str)
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:927
		{
			yyVAL.unlock = &Unlock{KeyRangeID: yyDollar[2].key_range_selector.KeyRangeID}
		}
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:933
		{
			yyVAL.sharding_rule_selector = &ShardingRuleSelector{ID: yyDollar[3].str}
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:939
		{
			yyVAL.key_range_selector = &KeyRangeSelector{KeyRangeID: yyDollar[3].str}
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:945
		{
			yyVAL.distribution_selector = &DistributionSelector{ID: yyDollar[2].str, Replicated: false}
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:947
		{
			yyVAL.distribution_selector = &DistributionSelector{Replicated: true, ID: "REPLICATED"}
		}
	case 141:
		yyDollar = yyS[yypt-6 : yypt+1]
//line gram.y:953
		{
			yyVAL.split = &SplitKeyRange{KeyRangeID: yyDollar[2].key_range_selector.KeyRangeID, KeyRangeFromID: yyDollar[4].str, Border: yyDollar[6].krbound}
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:959
		{
			yyVAL.kill = &Kill{Cmd: yyDollar[2].str, Target: yyDollar[3].uinteger}
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:962
		{
			yyVAL.kill = &Kill{Cmd: "client", Target: yyDollar[3].uinteger}
		}
	case 144:
		yyDollar = yyS[yypt-4 : yypt+1]
//line gram.y:968
		{
			yyVAL.move = &MoveKeyRange{KeyRangeID: yyDollar[2].key_range_selector.KeyRangeID, DestShardID: yyDollar[4].str}
		}
	case 145:
		yyDollar = yyS[yypt-5 : yypt+1]
//line gram.y:974
		{
			yyVAL.redistribute = &RedistributeKeyRange{KeyRangeID: yyDollar[2].key_range_selector.KeyRangeID, DestShardID: yyDollar[4].str, BatchSize: yyDollar[5].opt_batch_size, Check: true, Apply: true}
		}
	case 146:
		yyDollar = yyS[yypt-6 : yypt+1]
//line gram.y:976
		{
			yyVAL.redistribute = &RedistributeKeyRange{KeyRangeID: yyDollar[2].key_range_selector.KeyRangeID, DestShardID: yyDollar[4].str, BatchSize: yyDollar[5].opt_batch_size, Check: true}
		}
	case 147:
		yyDollar = yyS[yypt-6 : yypt+1]
//line gram.y:978
		{
			yyVAL.redistribute = &RedistributeKeyRange{KeyRangeID: yyDollar[2].key_range_selector.KeyRangeID, DestShardID: yyDollar[4].str, BatchSize: yyDollar[5].opt_batch_size, Apply: true}
		}
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:982
		{
			yyVAL.opt_batch_size = int(yyDollar[3].uinteger)
		}
	case 149:
		yyDollar = yyS[yypt-0 : yypt+1]
//line gram.y:983
		{
			yyVAL.opt_batch_size = -1
		}
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
//line gram.y:987
		{
			yyVAL.unite = &UniteKeyRange{KeyRangeIDL: yyDollar[2].key_range_selector.KeyRangeID, KeyRangeIDR: yyDollar[4].str}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:993
		{
			yyVAL.listen = &Listen{addr: yyDollar[2].str}
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:999
		{
			yyVAL.shutdown = &Shutdown{}
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:1005
		{
			yyVAL.invalidate_cache = &InvalidateCache{}
		}
	case 154:
		yyDollar = yyS[yypt-5 : yypt+1]
//line gram.y:1013
		{
			yyVAL.register_router = &RegisterRouter{ID: yyDollar[3].str, Addr: yyDollar[5].str}
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:1019
		{
			yyVAL.unregister_router = &UnregisterRouter{ID: yyDollar[3].str}
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:1024
		{
			yyVAL.unregister_router = &UnregisterRouter{ID: `*`}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
<<<<<<< HEAD
<<<<<<< HEAD
//line gram.y:1038
>>>>>>> 732e79a8 (initial)
=======
//line gram.y:1039
>>>>>>> 7ecc9870 (fix unittest)
=======
//line gram.y:1032
>>>>>>> b252c210 (fixes after review)
		{
			yyVAL.retryMoveTaskGroup = &RetryMoveTaskGroup{}
		}
	}
	goto yystack /* stack new state and value */
}
