// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/clientinteractor/interactor.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	net "net"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	port "github.com/pg-sharding/spqr/router/port"
)

// MockInteractor is a mock of Interactor interface.
type MockInteractor struct {
	ctrl     *gomock.Controller
	recorder *MockInteractorMockRecorder
}

// MockInteractorMockRecorder is the mock recorder for MockInteractor.
type MockInteractorMockRecorder struct {
	mock *MockInteractor
}

// NewMockInteractor creates a new mock instance.
func NewMockInteractor(ctrl *gomock.Controller) *MockInteractor {
	mock := &MockInteractor{ctrl: ctrl}
	mock.recorder = &MockInteractorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInteractor) EXPECT() *MockInteractorMockRecorder {
	return m.recorder
}

// ProcClient mocks base method.
func (m *MockInteractor) ProcClient(ctx context.Context, nconn net.Conn, pt port.RouterPortType) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProcClient", ctx, nconn, pt)
	ret0, _ := ret[0].(error)
	return ret0
}

// ProcClient indicates an expected call of ProcClient.
func (mr *MockInteractorMockRecorder) ProcClient(ctx, nconn, pt interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProcClient", reflect.TypeOf((*MockInteractor)(nil).ProcClient), ctx, nconn, pt)
}

// MockTableDesc is a mock of TableDesc interface.
type MockTableDesc struct {
	ctrl     *gomock.Controller
	recorder *MockTableDescMockRecorder
}

// MockTableDescMockRecorder is the mock recorder for MockTableDesc.
type MockTableDescMockRecorder struct {
	mock *MockTableDesc
}

// NewMockTableDesc creates a new mock instance.
func NewMockTableDesc(ctrl *gomock.Controller) *MockTableDesc {
	mock := &MockTableDesc{ctrl: ctrl}
	mock.recorder = &MockTableDescMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTableDesc) EXPECT() *MockTableDescMockRecorder {
	return m.recorder
}

// GetHeader mocks base method.
func (m *MockTableDesc) GetHeader() []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHeader")
	ret0, _ := ret[0].([]string)
	return ret0
}

// GetHeader indicates an expected call of GetHeader.
func (mr *MockTableDescMockRecorder) GetHeader() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHeader", reflect.TypeOf((*MockTableDesc)(nil).GetHeader))
}
