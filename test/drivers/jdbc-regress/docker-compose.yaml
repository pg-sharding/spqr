services:
  x-base-image:
    image: spqr-base-image
    build:
      context: ../../..
      dockerfile: docker/spqr/Dockerfile
      tags:
        - docker.io/library/spqr-base-image
    
  x-shard-image:
    image: spqr-shard-image
    build:
      context: ../../..
      dockerfile: docker/shard/Dockerfile
      tags:
        - docker.io/library/spqr-shard-image
  
  x-shard-common:
    &shard-common
    image: spqr-shard-image
    environment:
      - POSTGRES_USER=regress
      - POSTGRES_DB=regress
    healthcheck:
      test: pg_isready -p 6432 -U regress -d regress
      interval: 10s
      timeout: 3s
      retries: 50
    depends_on:
      - x-shard-image

  shard1:
    <<: *shard-common
    ports:
      - "7432:6432"
    hostname: spqr_shard_1
    container_name: spqr_shard_1
  shard2:
    <<: *shard-common
    ports:
      - "7433:6432"
    hostname: spqr_shard_2
    container_name: spqr_shard_2
  # shard3:
  #   <<: *shard-common
  #   ports:
  #     - "7434:6432"
  #   hostname: spqr_shard_3
  #   container_name: spqr_shard_3
  # shard4:
  #   <<: *shard-common
  #   ports:
  #     - "7435:6432"
  #   hostname: spqr_shard_4
  #   container_name: spqr_shard_4
  router:
    build:
      dockerfile: ./docker/router/Dockerfile
      context: ../../..
    ports:
      - "6432:6432"
    command: ["--config", "/spqr/test/regress/conf/router.yaml"]
    hostname: regress_router
    container_name: regress_router
    depends_on:
      x-base-image:
        condition: service_completed_successfully
      shard1:
        condition: service_healthy
      shard2:
        condition: service_healthy
      # shard3:
      #   condition: service_healthy
      # shard4:
      #   condition: service_healthy

  coordinator:
    build:
      dockerfile: ./docker/coordinator/Dockerfile
      context: ../../..
    ports:
      - "7002:7002"
      - "7003:7003"
    command: [ "-c", "/spqr/test/regress/conf/coordinator.yaml" ]
    hostname: regress_coordinator
    container_name: regress_coordinator
    depends_on:
      - "router"
      - "qdb01"

  qdb01:
    image: 'bitnami/etcd:latest'
    hostname: regress_qdb_0_1
    container_name: regress_qdb_0_1
    environment:
      ALLOW_NONE_AUTHENTICATION: "yes"
      ETCD_LOG_LEVEL: "debug"
    ports:
      - "2379:2379"

  regress:
    build:
      context: https://github.com/pg-sharding/jdbc-spqr.git
    environment:
      - PG_HOST=regress_router
      - PG_PORT=6432
      - PG_USER=regress
      - PG_DATABASE=regress
      - PGPASSWORD=12345678
    hostname: regress_tests
    container_name: regress_tests
    depends_on:
      - coordinator
