\c spqr-console

		SPQR router admin console
	Here you can configure your routing rules
------------------------------------------------
	You can find documentation here 
https://github.com/pg-sharding/spqr/tree/master/docs

CREATE DISTRIBUTION ds1 COLUMN TYPES integer;
         add distribution         
----------------------------------
 created distribution with id ds1
(1 row)

CREATE KEY RANGE krid1 FROM 1 ROUTE TO sh1 FOR DISTRIBUTION ds1;
         add key range          
--------------------------------
 created key range with bound 1
(1 row)

CREATE KEY RANGE krid2 FROM 11 ROUTE TO sh2 FOR DISTRIBUTION ds1;
          add key range          
---------------------------------
 created key range with bound 11
(1 row)

ALTER DISTRIBUTION ds1 ATTACH RELATION test_beg DISTRIBUTION KEY id;
                  attach table                  
------------------------------------------------
 attached relation test_beg to distribution ds1
(1 row)

\c regress
CREATE TABLE test_beg(id int, age int);
NOTICE: send query to shard(s) : sh1,sh2
INSERT INTO test_beg(id, age) VALUES (10, 16);
NOTICE: send query to shard(s) : sh1
INSERT INTO test_beg(id, age) VALUES (10, 16);
NOTICE: send query to shard(s) : sh1
SELECT * FROM test_beg WHERE id=10;
NOTICE: send query to shard(s) : sh1
 id | age 
----+-----
 10 |  16
 10 |  16
(2 rows)

BEGIN TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
SELECT * FROM test_beg WHERE id=10;
NOTICE: send query to shard(s) : sh1
 id | age 
----+-----
 10 |  16
 10 |  16
(2 rows)

INSERT INTO test_beg(id, age) VALUES (10, 16);
SELECT * FROM test_beg WHERE id=10;
 id | age 
----+-----
 10 |  16
 10 |  16
 10 |  16
(3 rows)

ROLLBACK;
BEGIN TRANSACTION ISOLATION LEVEL READ COMMITTED;
SELECT * FROM test_beg WHERE id=10;
NOTICE: send query to shard(s) : sh1
 id | age 
----+-----
 10 |  16
 10 |  16
(2 rows)

INSERT INTO test_beg(id, age) VALUES (10, 16);
SELECT * FROM test_beg WHERE id=10;
 id | age 
----+-----
 10 |  16
 10 |  16
 10 |  16
(3 rows)

ROLLBACK;
BEGIN TRANSACTION ISOLATION LEVEL REPEATABLE READ;
SELECT * FROM test_beg WHERE id=10;
NOTICE: send query to shard(s) : sh1
 id | age 
----+-----
 10 |  16
 10 |  16
(2 rows)

INSERT INTO test_beg(id, age) VALUES (10, 16);
SELECT * FROM test_beg WHERE id=10;
 id | age 
----+-----
 10 |  16
 10 |  16
 10 |  16
(3 rows)

ROLLBACK;
BEGIN TRANSACTION ISOLATION LEVEL SERIALIZABLE;
SELECT * FROM test_beg WHERE id=10;
NOTICE: send query to shard(s) : sh1
 id | age 
----+-----
 10 |  16
 10 |  16
(2 rows)

INSERT INTO test_beg(id, age) VALUES (10, 16);
SELECT * FROM test_beg WHERE id=10;
 id | age 
----+-----
 10 |  16
 10 |  16
 10 |  16
(3 rows)

ROLLBACK;
/* TODO: Different ISOLATION LEVEL have to effect */
BEGIN TRANSACTION READ WRITE;
SELECT * FROM test_beg WHERE id=10;
NOTICE: send query to shard(s) : sh1
 id | age 
----+-----
 10 |  16
 10 |  16
(2 rows)

INSERT INTO test_beg(id, age) VALUES (10, 16);
SELECT * FROM test_beg WHERE id=10;
 id | age 
----+-----
 10 |  16
 10 |  16
 10 |  16
(3 rows)

ROLLBACK;
BEGIN TRANSACTION DEFERRABLE;
SELECT * FROM test_beg WHERE id=10;
NOTICE: send query to shard(s) : sh1
 id | age 
----+-----
 10 |  16
 10 |  16
(2 rows)

INSERT INTO test_beg(id, age) VALUES (10, 16);
SELECT * FROM test_beg WHERE id=10;
 id | age 
----+-----
 10 |  16
 10 |  16
 10 |  16
(3 rows)

ROLLBACK;
BEGIN TRANSACTION NOT DEFERRABLE;
SELECT * FROM test_beg WHERE id=10;
NOTICE: send query to shard(s) : sh1
 id | age 
----+-----
 10 |  16
 10 |  16
(2 rows)

INSERT INTO test_beg(id, age) VALUES (10, 16);
SELECT * FROM test_beg WHERE id=10;
 id | age 
----+-----
 10 |  16
 10 |  16
 10 |  16
(3 rows)

ROLLBACK;
BEGIN TRANSACTION READ ONLY;
SELECT * FROM test_beg WHERE id=10;
NOTICE: send query to shard(s) : sh1
 id | age 
----+-----
 10 |  16
 10 |  16
(2 rows)

INSERT INTO test_beg(id, age) VALUES (10, 16);
ERROR:  cannot execute INSERT in a read-only transaction
ROLLBACK;
DROP TABLE test_beg;
NOTICE: send query to shard(s) : sh1,sh2
\c spqr-console

		SPQR router admin console
	Here you can configure your routing rules
------------------------------------------------
	You can find documentation here 
https://github.com/pg-sharding/spqr/tree/master/docs

DROP DISTRIBUTION ALL CASCADE;
   drop distribution   
-----------------------
 drop distribution ds1
(1 row)

DROP KEY RANGE ALL;
 drop key range 
----------------
(0 rows)

