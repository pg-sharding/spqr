\c spqr-console

		SPQR router admin console
	Here you can configure your routing rules
------------------------------------------------
	You can find documentation here 
https://github.com/pg-sharding/spqr/tree/master/docs

CREATE DISTRIBUTION ds1 COLUMN TYPES integer;
    add distribution    
------------------------
 distribution id -> ds1
(1 row)

CREATE KEY RANGE FROM 301 ROUTE TO sh4 FOR DISTRIBUTION ds1;
 add key range 
---------------
 bound -> 301
(1 row)

CREATE KEY RANGE FROM 201 ROUTE TO sh3 FOR DISTRIBUTION ds1;
 add key range 
---------------
 bound -> 201
(1 row)

CREATE KEY RANGE FROM 101 ROUTE TO sh2 FOR DISTRIBUTION ds1;
 add key range 
---------------
 bound -> 101
(1 row)

CREATE KEY RANGE FROM 1 ROUTE TO sh1 FOR DISTRIBUTION ds1;
 add key range 
---------------
 bound -> 1
(1 row)

ALTER DISTRIBUTION ds1 ATTACH RELATION table1 DISTRIBUTION KEY id;
       attach table        
---------------------------
 relation name   -> table1
 distribution id -> ds1
(2 rows)

\c regress
CREATE TABLE table1(id INT PRIMARY KEY);
NOTICE: send query to shard(s) : sh1,sh2,sh3,sh4
COPY table1 (id) FROM STDIN;
NOTICE: send query to shard(s) : sh1,sh2,sh3,sh4
-- should fail
BEGIN;
DELETE FROM table1;
ERROR:  client processing error: error processing query 'DELETE FROM table1;': failed to match any datashard., tx status ERROR
ROLLBACK;
BEGIN;
DELETE FROM table1 /* __spqr__engine_v2: true  */; 
NOTICE: send query to shard(s) : sh1,sh2,sh3,sh4
SELECT id FROM table1 ORDER BY id;
NOTICE: send query to shard(s) : sh1,sh2,sh3,sh4
 id 
----
(0 rows)

ROLLBACK;
SELECT id FROM table1 ORDER BY id;
NOTICE: send query to shard(s) : sh1,sh2,sh3,sh4
 id  
-----
   1
   2
   3
 100
 101
 102
 103
 200
 201
 202
 300
 301
 302
(13 rows)

DROP TABLE table1 CASCADE;
NOTICE: send query to shard(s) : sh1,sh2,sh3,sh4
\c spqr-console

		SPQR router admin console
	Here you can configure your routing rules
------------------------------------------------
	You can find documentation here 
https://github.com/pg-sharding/spqr/tree/master/docs

DROP DISTRIBUTION ALL CASCADE;
   drop distribution    
------------------------
 distribution id -> ds1
(1 row)

DROP KEY RANGE ALL;
 drop key range 
----------------
(0 rows)

