\c spqr-console

		SPQR router admin console
	Here you can configure your routing rules
------------------------------------------------
	You can find documentation here 
https://github.com/pg-sharding/spqr/tree/master/docs

CREATE DISTRIBUTION ds1 COLUMN TYPES INTEGER;
    add distribution    
------------------------
 distribution id -> ds1
(1 row)

ALTER DISTRIBUTION ds1 ATTACH RELATION tt DISTRIBUTION KEY id;
          attach table          
--------------------------------
 relation name   -> tt
 distribution id -> ds1
(2 rows)

CREATE KEY RANGE krid1 FROM 0 ROUTE TO sh1 FOR DISTRIBUTION ds1;
 add key range 
---------------
 bound -> 0
(1 row)

CREATE KEY RANGE krid2 FROM 50 ROUTE TO sh2 FOR DISTRIBUTION ds1;
ERROR:  key range krid2 intersects with key range krid1 in QDB
\c regress
CREATE TABLE tt(id INT PRIMARY KEY, data TEXT);
NOTICE: send query to shard(s) : sh1,sh2,sh3,sh4
-- insert initial data
INSERT INTO tt (id, data) VALUES (1, 'first');
NOTICE: send query to shard(s) : sh1
INSERT INTO tt (id, data) VALUES (51, 'second');
NOTICE: send query to shard(s) : sh1
-- test unique constraint violation on shard
BEGIN;
INSERT INTO tt (id, data) VALUES (2, 'valid');
NOTICE: send query to shard(s) : sh1
-- this should cause a unique constraint violation error from shard
INSERT INTO tt (id, data) VALUES (1, 'duplicate');
NOTICE: send query to shard(s) : sh1
ERROR:  duplicate key value violates unique constraint "tt_pkey"
DETAIL:  Key (id)=(1) already exists.
-- after error, transaction should be aborted - this should fail with SPQRU
INSERT INTO tt (id, data) VALUES (3, 'should_fail');
ERROR:  current transaction is aborted, commands ignored until end of transaction block
ROLLBACK;
-- test that table is still accessible after rollback
SELECT COUNT(*) FROM tt;
NOTICE: send query to shard(s) : sh1,sh2,sh3,sh4
 count 
-------
     2
     0
     0
     0
(4 rows)

-- test cross-shard transaction with error
BEGIN;
INSERT INTO tt (id, data) VALUES (10, 'shard1');
NOTICE: send query to shard(s) : sh1
INSERT INTO tt (id, data) VALUES (60, 'shard2');
NOTICE: send query to shard(s) : sh1
-- violate constraint on different shard
INSERT INTO tt (id, data) VALUES (51, 'duplicate_shard2');
NOTICE: send query to shard(s) : sh1
ERROR:  duplicate key value violates unique constraint "tt_pkey"
DETAIL:  Key (id)=(51) already exists.
-- should fail with transaction aborted error
SELECT * FROM tt WHERE id = 10;
ERROR:  current transaction is aborted, commands ignored until end of transaction block
ROLLBACK;
DROP TABLE tt;
NOTICE: send query to shard(s) : sh1,sh2,sh3,sh4
\c spqr-console

		SPQR router admin console
	Here you can configure your routing rules
------------------------------------------------
	You can find documentation here 
https://github.com/pg-sharding/spqr/tree/master/docs

DROP DISTRIBUTION ALL CASCADE;
   drop distribution    
------------------------
 distribution id -> ds1
(1 row)

DROP KEY RANGE ALL;
 drop key range 
----------------
(0 rows)

