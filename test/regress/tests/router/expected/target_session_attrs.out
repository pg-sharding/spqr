\c spqr-console

		SPQR router admin console
	Here you can configure your routing rules
------------------------------------------------
	You can find documentation here 
https://github.com/pg-sharding/spqr/tree/master/docs

CREATE DISTRIBUTION ds1 COLUMN TYPES integer;
         add distribution         
----------------------------------
 created distribution with id ds1
(1 row)

CREATE KEY RANGE krid1 FROM 1 ROUTE TO sh1 FOR DISTRIBUTION ds1;
         add key range          
--------------------------------
 created key range with bound 1
(1 row)

CREATE KEY RANGE krid2 FROM 101 ROUTE TO sh2 FOR DISTRIBUTION ds1;
          add key range           
----------------------------------
 created key range with bound 101
(1 row)

ALTER DISTRIBUTION ds1 ATTACH RELATION tsa_test DISTRIBUTION KEY id;
                  attach table                  
------------------------------------------------
 attached relation tsa_test to distribution ds1
(1 row)

\c regress
CREATE TABLE tsa_test (id int);
NOTICE: send query to shard(s) : sh1,sh2
INSERT INTO tsa_test (id) VALUES (22);
NOTICE: send query to shard(s) : sh1
-- you could specify target-session-attrs anywhere in your query
SELECT pg_is_in_recovery() /* target-session-attrs: read-write */ , id FROM tsa_test WHERE id = 22;
NOTICE: send query to shard(s) : sh1
 pg_is_in_recovery | id 
-------------------+----
 f                 | 22
(1 row)

/* target-session-attrs: read-write */ SELECT pg_is_in_recovery(), id FROM tsa_test WHERE id = 22;
NOTICE: send query to shard(s) : sh1
 pg_is_in_recovery | id 
-------------------+----
 f                 | 22
(1 row)

SELECT pg_is_in_recovery(), id FROM tsa_test WHERE id = 22 /* target-session-attrs: read-write */;
NOTICE: send query to shard(s) : sh1
 pg_is_in_recovery | id 
-------------------+----
 f                 | 22
(1 row)

-- read-only is also supported but there is no high availability cluster in our tests yet, so it returns error
-- SELECT pg_is_in_recovery() /* target-session-attrs: read-only */ , id FROM tsa_test WHERE id = 22;
-- NOTICE: send query to shard(s) : sh1
-- ERROR:  failed to find replica
DROP TABLE tsa_test;
NOTICE: send query to shard(s) : sh1,sh2
\c spqr-console

		SPQR router admin console
	Here you can configure your routing rules
------------------------------------------------
	You can find documentation here 
https://github.com/pg-sharding/spqr/tree/master/docs

DROP DISTRIBUTION ALL CASCADE;
   drop distribution   
-----------------------
 drop distribution ds1
(1 row)

DROP KEY RANGE ALL;
 drop key range 
----------------
(0 rows)

