\c spqr-console

		SPQR router admin console
	Here you can configure your routing rules
------------------------------------------------
	You can find documentation here 
https://github.com/pg-sharding/spqr/tree/master/docs

-- check that numeric type works
CREATE DISTRIBUTION ds1 COLUMN TYPES integer;
    add distribution    
------------------------
 distribution id -> ds1
(1 row)

CREATE KEY RANGE krid1 FROM 0 ROUTE TO sh1 FOR DISTRIBUTION ds1;
 add key range 
---------------
 bound -> 0
(1 row)

CREATE KEY RANGE krid2 FROM 100 ROUTE TO sh2 FOR DISTRIBUTION ds1;
 add key range 
---------------
 bound -> 100
(1 row)

CREATE KEY RANGE krid3 FROM 200 ROUTE TO sh3 FOR DISTRIBUTION ds1;
 add key range 
---------------
 bound -> 200
(1 row)

CREATE KEY RANGE krid4 FROM 300 ROUTE TO sh4 FOR DISTRIBUTION ds1;
 add key range 
---------------
 bound -> 300
(1 row)

ALTER DISTRIBUTION ds1 ATTACH RELATION xxmixed DISTRIBUTION KEY id;
        attach table        
----------------------------
 relation name   -> xxmixed
 distribution id -> ds1
(2 rows)

\c regress
CREATE TABLE xxmixed(id int);
NOTICE: send query to shard(s) : sh1,sh2,sh3,sh4
COPY xxmixed (id) FROM STDIN;
NOTICE: send query to shard(s) : sh1,sh2,sh3,sh4
/* XXX: sort result here is not stable until proper router processing support */
SELECT * FROM xxmixed ORDER BY id;
NOTICE: send query to shard(s) : sh1,sh2,sh3,sh4
 id  
-----
   0
   1
  10
  20
  30
  50
  99
 100
 101
 102
 150
 152
 199
 201
 201
 250
 299
 300
 301
 350
 399
 400
 401
(23 rows)

SELECT * FROM xxmixed WHERE id = 0 OR id = 199;
NOTICE: send query to shard(s) : sh1,sh2
 id  
-----
   0
 199
(2 rows)

SELECT * FROM xxmixed WHERE id = 0 OR id = 399;
NOTICE: send query to shard(s) : sh1,sh4
 id  
-----
   0
 399
(2 rows)

SELECT * FROM xxmixed WHERE id = 1 OR id = 299 OR id = 350;
NOTICE: send query to shard(s) : sh1,sh3,sh4
 id  
-----
   1
 299
 350
(3 rows)

SELECT * FROM xxmixed WHERE id = 299 OR id = 350;
NOTICE: send query to shard(s) : sh3,sh4
 id  
-----
 299
 350
(2 rows)

SELECT * FROM xxmixed WHERE id = 201 UNION ALL SELECT * FROM xxmixed WHERE id = 199;
NOTICE: send query to shard(s) : sh2,sh3
 id  
-----
 199
 201
 201
(3 rows)

SELECT * FROM xxmixed WHERE id = 401 UNION ALL SELECT * FROM xxmixed WHERE id = 99;
NOTICE: send query to shard(s) : sh1,sh4
 id  
-----
  99
 401
(2 rows)

SELECT * FROM xxmixed WHERE id = 401 EXCEPT ALL SELECT * FROM xxmixed WHERE id = 99;
NOTICE: send query to shard(s) : sh1,sh4
 id  
-----
 401
(1 row)

WITH d AS (SELECT * FROM xxmixed WHERE id = 401 OR id = 0) TABLE d;
NOTICE: send query to shard(s) : sh1,sh4
 id  
-----
   0
 401
(2 rows)

WITH d AS (SELECT * FROM xxmixed WHERE id = 401 OR id = 0) SELECT * FROM d UNION ALL SELECT * FROM xxmixed WHERE id = 300;
ERROR:  client processing error: error processing query 'WITH d AS (SELECT * FROM xxmixed WHERE id = 401 OR id = 0) SELECT * FROM d UNION ALL SELECT * FROM xxmixed WHERE id = 300;': distribution for relation "d" not found., tx status IDLE
UPDATE xxmixed SET id = -1 /* __spqr__engine_v2: true */;;
NOTICE: send query to shard(s) : sh1,sh2,sh3,sh4
DELETE FROM xxmixed /* __spqr__engine_v2: true */;;
NOTICE: send query to shard(s) : sh1,sh2,sh3,sh4
DROP TABLE xxmixed;
NOTICE: send query to shard(s) : sh1,sh2,sh3,sh4
\c spqr-console

		SPQR router admin console
	Here you can configure your routing rules
------------------------------------------------
	You can find documentation here 
https://github.com/pg-sharding/spqr/tree/master/docs

DROP DISTRIBUTION ALL CASCADE;
   drop distribution    
------------------------
 distribution id -> ds1
(1 row)

DROP KEY RANGE ALL;
 drop key range 
----------------
(0 rows)

