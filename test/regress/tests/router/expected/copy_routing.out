\c spqr-console

		SQPR router admin console
	Here you can configure your routing rules
------------------------------------------------
	You can find documentation here 
https://github.com/pg-sharding/spqr/tree/master/docs

You are now connected to database "spqr-console" as user "reshke".
ADD SHARDING RULE t1 COLUMNS id;
ERROR:  sharding rule t1 inlude existing rule r2
ADD KEY RANGE krid1 FROM 1 TO 29 ROUTE TO sh1;
ERROR:  key range krid1 already present in qdb
ADD KEY RANGE krid2 FROM 30 TO 4000 ROUTE TO sh2;
ERROR:  key range krid2 already present in qdb
\c regress
You are now connected to database "regress" as user "reshke".
CREATE TABLE copy_test (id int);
NOTICE: send query to shard(s) : sh1,sh2
CREATE TABLE
COPY copy_test FROM STDIN WHERE id <= 10;
NOTICE: send query to shard(s) : sh1
COPY 5
SELECT * FROM copy_test WHERE id <= 10;
NOTICE: send query to shard(s) : sh1
 id 
----
  1
  2
  3
  4
  5
(5 rows)

COPY copy_test FROM STDIN WHERE id <= 30;
NOTICE: send query to shard(s) : sh2
COPY 8
SELECT * FROM copy_test WHERE id <= 30 ORDER BY copy_test;
NOTICE: send query to shard(s) : sh2
 id 
----
  1
  2
  3
  4
  5
 12
 22
 23
(8 rows)

DROP TABLE copy_test;
NOTICE: send query to shard(s) : sh1,sh2
DROP TABLE
\c spqr-console

		SQPR router admin console
	Here you can configure your routing rules
------------------------------------------------
	You can find documentation here 
https://github.com/pg-sharding/spqr/tree/master/docs

You are now connected to database "spqr-console" as user "reshke".
DROP KEY RANGE ALL;
 drop key range 
----------------
(0 rows)

DROP SHARDING RULE ALL;
       drop sharding rule       
--------------------------------
 dropped sharding rule r1,r2,r3
(1 row)

