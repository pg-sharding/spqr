\c spqr-console

		SPQR router admin console
	Here you can configure your routing rules
------------------------------------------------
	You can find documentation here 
https://github.com/pg-sharding/spqr/tree/master/docs

CREATE DISTRIBUTION ds1;
    add distribution    
------------------------
 distribution id -> ds1
(1 row)

CREATE KEY RANGE krid1 FROM 1 ROUTE TO sh1 FOR DISTRIBUTION ds1;
 add key range 
---------------
 bound -> 1
(1 row)

CREATE KEY RANGE krid2 FROM 30 ROUTE TO sh2 FOR DISTRIBUTION ds1;
 add key range 
---------------
 bound -> 30
(1 row)

ALTER DISTRIBUTION ds1 ATTACH RELATION copy_test DISTRIBUTION KEY id;
         attach table         
------------------------------
 relation name   -> copy_test
 distribution id -> ds1
(2 rows)

\c regress
CREATE TABLE copy_test (id int);
NOTICE: send query to shard(s) : sh1,sh2
COPY copy_test FROM STDIN WHERE id <= 10;
NOTICE: send query to shard(s) : sh1
SELECT * FROM copy_test WHERE id <= 10;
NOTICE: send query to shard(s) : sh1
 id 
----
  1
  2
  3
  4
  5
(5 rows)

COPY copy_test FROM STDIN WHERE id <= 30;
NOTICE: send query to shard(s) : sh2
SELECT * FROM copy_test WHERE id <= 30 ORDER BY copy_test;
NOTICE: send query to shard(s) : sh2
 id 
----
  1
  2
  3
  4
  5
 12
 22
 23
(8 rows)

DROP TABLE copy_test;
NOTICE: send query to shard(s) : sh1,sh2
\c spqr-console

		SPQR router admin console
	Here you can configure your routing rules
------------------------------------------------
	You can find documentation here 
https://github.com/pg-sharding/spqr/tree/master/docs

DROP DISTRIBUTION ALL CASCADE;
   drop distribution    
------------------------
 distribution id -> ds1
(1 row)

DROP KEY RANGE ALL;
 drop key range 
----------------
(0 rows)

