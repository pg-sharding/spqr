\c spqr-console

		SPQR router admin console
	Here you can configure your routing rules
------------------------------------------------
	You can find documentation here 
https://github.com/pg-sharding/spqr/tree/master/docs

-- check that numeric type works
CREATE DISTRIBUTION ds1 COLUMN TYPES integer;
    add distribution    
------------------------
 distribution id -> ds1
(1 row)

CREATE KEY RANGE krid1 FROM 1 ROUTE TO sh1 FOR DISTRIBUTION ds1;
 add key range 
---------------
 bound -> 1
(1 row)

CREATE KEY RANGE krid2 FROM 11 ROUTE TO sh2 FOR DISTRIBUTION ds1;
 add key range 
---------------
 bound -> 11
(1 row)

ALTER DISTRIBUTION ds1 ATTACH RELATION xxmixed DISTRIBUTION KEY id;
        attach table        
----------------------------
 relation name   -> xxmixed
 distribution id -> ds1
(2 rows)

\c regress
CREATE TABLE xxmixed(id int);
NOTICE: send query to shard(s) : sh1,sh2
INSERT INTO xxmixed (id) VALUES(1);
NOTICE: send query to shard(s) : sh1
INSERT INTO xxmixed (id) VALUES(10);
NOTICE: send query to shard(s) : sh1
INSERT INTO xxmixed (id) VALUES(11);
NOTICE: send query to shard(s) : sh2
INSERT INTO xxmixed (id) VALUES(20);
NOTICE: send query to shard(s) : sh2
INSERT INTO xxmixed (id) VALUES(21);
NOTICE: send query to shard(s) : sh2
INSERT INTO xxmixed (id) VALUES(22);
NOTICE: send query to shard(s) : sh2
INSERT INTO xxmixed (id) VALUES(29);
NOTICE: send query to shard(s) : sh2
INSERT INTO xxmixed (id) VALUES(30);
NOTICE: send query to shard(s) : sh2
SELECT * FROM xxmixed ORDER BY id;
NOTICE: send query to shard(s) : sh1,sh2
 id 
----
  1
 10
 11
 20
 21
 22
 29
 30
(8 rows)

SELECT * FROM xxmixed WHERE id <= 10 ORDER BY id;
NOTICE: send query to shard(s) : sh1
 id 
----
  1
 10
(2 rows)

SELECT * FROM xxmixed WHERE id <= 20 ORDER BY id;
NOTICE: send query to shard(s) : sh2
 id 
----
 11
 20
(2 rows)

SELECT * FROM xxmixed WHERE id <= 30 ORDER BY id;
NOTICE: send query to shard(s) : sh2
 id 
----
 11
 20
 21
 22
 29
 30
(6 rows)

SELECT * FROM xxmixed WHERE id BETWEEN 1 AND 25 ORDER BY id;
NOTICE: send query to shard(s) : sh1
 id 
----
  1
 10
(2 rows)

SELECT * FROM xxmixed WHERE id BETWEEN 13 AND 18 ORDER BY id;
NOTICE: send query to shard(s) : sh2
 id 
----
(0 rows)

SELECT * FROM xxmixed WHERE id BETWEEN 19 AND 30 ORDER BY id;
NOTICE: send query to shard(s) : sh2
 id 
----
 20
 21
 22
 29
 30
(5 rows)

SELECT * FROM xxmixed WHERE id BETWEEN 21 AND 22 ORDER BY id;
NOTICE: send query to shard(s) : sh2
 id 
----
 21
 22
(2 rows)

SELECT * FROM xxmixed WHERE id BETWEEN 22 AND 30 ORDER BY id;
NOTICE: send query to shard(s) : sh2
 id 
----
 22
 29
 30
(3 rows)

DROP TABLE xxmixed;
NOTICE: send query to shard(s) : sh1,sh2
\c spqr-console

		SPQR router admin console
	Here you can configure your routing rules
------------------------------------------------
	You can find documentation here 
https://github.com/pg-sharding/spqr/tree/master/docs

-- check that uuid type works
CREATE DISTRIBUTION ds2 COLUMN TYPES varchar;
    add distribution    
------------------------
 distribution id -> ds2
(1 row)

CREATE KEY RANGE krid3 FROM 00000000-0000-0000-0000-000000000000 ROUTE TO sh1 FOR DISTRIBUTION ds2;
                 add key range                 
-----------------------------------------------
 bound -> 00000000-0000-0000-0000-000000000000
(1 row)

CREATE KEY RANGE krid4 FROM 88888888-8888-8888-8888-888888888888 ROUTE TO sh2 FOR DISTRIBUTION ds2;
                 add key range                 
-----------------------------------------------
 bound -> 88888888-8888-8888-8888-888888888888
(1 row)

ALTER DISTRIBUTION ds2 ATTACH RELATION xxmixeduuid DISTRIBUTION KEY id;
          attach table          
--------------------------------
 relation name   -> xxmixeduuid
 distribution id -> ds2
(2 rows)

\c regress
CREATE TABLE xxmixeduuid(id uuid);
NOTICE: send query to shard(s) : sh1,sh2
INSERT INTO xxmixeduuid (id) VALUES('00000000-0000-0EA0-0FAB-AB031389FF09');
NOTICE: send query to shard(s) : sh1
INSERT INTO xxmixeduuid (id) VALUES('FA98123B-0000-0EA0-0FAB-AB031389FF09');
NOTICE: send query to shard(s) : sh2
INSERT INTO xxmixeduuid (id) VALUES('1234AAAA-98AB-0000-0000-BCAD0192EFEF');
NOTICE: send query to shard(s) : sh1
INSERT INTO xxmixeduuid (id) VALUES('FFFFFFFF-FFFF-FFFF-FFFF-FFFFFFFFFFFE');
NOTICE: send query to shard(s) : sh2
INSERT INTO xxmixeduuid (id) VALUES('00000000-0000-0000-0000-000000000000');
NOTICE: send query to shard(s) : sh1
SELECT * FROM xxmixeduuid WHERE id > '00000000-0000-0000-0000-000000000000' ORDER BY id;
NOTICE: send query to shard(s) : sh1
                  id                  
--------------------------------------
 00000000-0000-0ea0-0fab-ab031389ff09
 1234aaaa-98ab-0000-0000-bcad0192efef
(2 rows)

SELECT * FROM xxmixeduuid WHERE id >= '00000000-0000-0000-0000-000000000000' ORDER BY id;
NOTICE: send query to shard(s) : sh1
                  id                  
--------------------------------------
 00000000-0000-0000-0000-000000000000
 00000000-0000-0ea0-0fab-ab031389ff09
 1234aaaa-98ab-0000-0000-bcad0192efef
(3 rows)

SELECT * FROM xxmixeduuid WHERE id >= '88888888-8888-8888-8888-888888888888' ORDER BY id;
NOTICE: send query to shard(s) : sh2
                  id                  
--------------------------------------
 fa98123b-0000-0ea0-0fab-ab031389ff09
 ffffffff-ffff-ffff-ffff-fffffffffffe
(2 rows)

SELECT * FROM xxmixeduuid WHERE id <= 'FFFFFFFF-FFFF-FFFF-FFFF-FFFFFFFFFFFE' ORDER BY id;
NOTICE: send query to shard(s) : sh2
                  id                  
--------------------------------------
 fa98123b-0000-0ea0-0fab-ab031389ff09
 ffffffff-ffff-ffff-ffff-fffffffffffe
(2 rows)

DROP TABLE xxmixeduuid;
NOTICE: send query to shard(s) : sh1,sh2
\c spqr-console

		SPQR router admin console
	Here you can configure your routing rules
------------------------------------------------
	You can find documentation here 
https://github.com/pg-sharding/spqr/tree/master/docs

DROP DISTRIBUTION ALL CASCADE;
   drop distribution    
------------------------
 distribution id -> ds1
 distribution id -> ds2
(2 rows)

DROP KEY RANGE ALL;
 drop key range 
----------------
(0 rows)

