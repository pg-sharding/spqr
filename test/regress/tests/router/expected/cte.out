\c spqr-console

		SPQR router admin console
	Here you can configure your routing rules
------------------------------------------------
	You can find documentation here 
https://github.com/pg-sharding/spqr/tree/master/docs

CREATE DISTRIBUTION ds1 COLUMN TYPES integer;
    add distribution    
------------------------
 distribution id -> ds1
(1 row)

CREATE KEY RANGE FROM 301 ROUTE TO sh4 FOR DISTRIBUTION ds1;
 add key range 
---------------
 bound -> 301
(1 row)

CREATE KEY RANGE FROM 201 ROUTE TO sh3 FOR DISTRIBUTION ds1;
 add key range 
---------------
 bound -> 201
(1 row)

CREATE KEY RANGE FROM 101 ROUTE TO sh2 FOR DISTRIBUTION ds1;
 add key range 
---------------
 bound -> 101
(1 row)

CREATE KEY RANGE FROM 1 ROUTE TO sh1 FOR DISTRIBUTION ds1;
 add key range 
---------------
 bound -> 1
(1 row)

CREATE REFERENCE TABLE ref_rel_1;
   create reference table    
-----------------------------
 table    -> ref_rel_1
 shard id -> sh1,sh2,sh3,sh4
(2 rows)

ALTER DISTRIBUTION ds1 ATTACH RELATION table1 DISTRIBUTION KEY i;
       attach table        
---------------------------
 relation name   -> table1
 distribution id -> ds1
(2 rows)

CREATE DISTRIBUTED RELATION table2 DISTRIBUTION KEY a IN ds1;
       attach table        
---------------------------
 relation name   -> table2
 distribution id -> ds1
(2 rows)

\c regress
CREATE TABLE table1(i INT PRIMARY KEY);
NOTICE: send query to shard(s) : sh1,sh2,sh3,sh4
CREATE TABLE table2(a INT, b INT, c INT);
NOTICE: send query to shard(s) : sh1,sh2,sh3,sh4
CREATE TABLE ref_rel_1(i int, j int);
NOTICE: send query to shard(s) : sh1,sh2,sh3,sh4
WITH s AS (
	SELECT 1 FROM table1 WHERE i = 10
) TABLE s;
NOTICE: send query to shard(s) : sh1
 ?column? 
----------
(0 rows)

WITH s AS (
	SELECT 1 FROM table1 WHERE i = 10
), s2 AS (SELECT * FROM s) TABLE s2;
NOTICE: send query to shard(s) : sh1
 ?column? 
----------
(0 rows)

WITH s AS (
	SELECT 1 FROM table1 WHERE i = 210
), s2 AS (SELECT * FROM table1 WHERE i = 288) TABLE s2;
NOTICE: send query to shard(s) : sh3
 i 
---
(0 rows)

-- XXX: fix parser to allow this
--WITH s AS (
--	SELECT 1 FROM table1 WHERE i = 210
--), s2 AS (SELECT * FROM table1 WHERE i = 288) INSERT INTO table1 (select * from s2 union all select * from s);
INSERT INTO table1 (i) VALUES(10);
NOTICE: send query to shard(s) : sh1
WITH vv AS (SELECT 1) INSERT INTO table1 (i) VALUES(11);
NOTICE: send query to shard(s) : sh1
WITH vv AS (SELECT i + 1 FROM table1 WHERE i = 11) INSERT INTO table1 (i) TABLE vv;
NOTICE: send query to shard(s) : sh1
INSERT INTO table1 WITH s AS (SELECT i + 1 FROM table1 WHERE i = 12) TABLE s;
NOTICE: send query to shard(s) : sh1
SELECT * FROM table1 ORDER BY i /* __spqr__execute_on: sh1 */;
NOTICE: send query to shard(s) : sh1
 i  
----
 10
 11
 12
 13
(4 rows)

SELECT * FROM table1 ORDER BY i /* __spqr__execute_on: sh2 */;
NOTICE: send query to shard(s) : sh2
 i 
---
(0 rows)

SELECT * FROM table1 ORDER BY i /* __spqr__execute_on: sh3 */;
NOTICE: send query to shard(s) : sh3
 i 
---
(0 rows)

SELECT * FROM table1 ORDER BY i /* __spqr__execute_on: sh4 */;
NOTICE: send query to shard(s) : sh4
 i 
---
(0 rows)

INSERT INTO table2 (a,b,c) VALUES (1, 22, 33);
NOTICE: send query to shard(s) : sh1
WITH vv (x, y, z) AS (VALUES (1, 2, 3)) SELECT * FROM table2 t, vv WHERE t.a = vv.x;
NOTICE: send query to shard(s) : sh1
 a | b  | c  | x | y | z 
---+----+----+---+---+---
 1 | 22 | 33 | 1 | 2 | 3
(1 row)

WITH vv (x, y, z) AS (VALUES (1, 2, 3)) SELECT * FROM table2 t, vv v WHERE t.a = v.x;
NOTICE: send query to shard(s) : sh1
 a | b  | c  | x | y | z 
---+----+----+---+---+---
 1 | 22 | 33 | 1 | 2 | 3
(1 row)

WITH vals (x, y, z) AS (
    VALUES (
		1,
		2,
		4
    )
)
SELECT 
	*
FROM table2 r
JOIN vals 
	ON r.a = vals.x;
NOTICE: send query to shard(s) : sh1
 a | b  | c  | x | y | z 
---+----+----+---+---+---
 1 | 22 | 33 | 1 | 2 | 4
(1 row)

WITH vals (x, y, z) AS (
    VALUES (
		1,
		2,
		4
    )
),
ttttt AS (
    SELECT 
		*
    FROM table2 r
    JOIN vals 
        ON r.a = vals.x
)
UPDATE table2 SET b = b + 1;
NOTICE: send query to shard(s) : sh1
SELECT * FROM table2 ORDER BY a /* __spqr__execute_on: sh1 */;
NOTICE: send query to shard(s) : sh1
 a | b  | c  
---+----+----
 1 | 23 | 33
(1 row)

DROP TABLE table1;
NOTICE: send query to shard(s) : sh1,sh2,sh3,sh4
DROP TABLE table2;
NOTICE: send query to shard(s) : sh1,sh2,sh3,sh4
DROP TABLE ref_rel_1;
NOTICE: send query to shard(s) : sh1,sh2,sh3,sh4
\c spqr-console

		SPQR router admin console
	Here you can configure your routing rules
------------------------------------------------
	You can find documentation here 
https://github.com/pg-sharding/spqr/tree/master/docs

DROP DISTRIBUTION ALL CASCADE;
       drop distribution       
-------------------------------
 distribution id -> REPLICATED
 distribution id -> ds1
(2 rows)

DROP KEY RANGE ALL;
 drop key range 
----------------
(0 rows)

