\c spqr-console

		SPQR router admin console
	Here you can configure your routing rules
------------------------------------------------
	You can find documentation here 
https://github.com/pg-sharding/spqr/tree/master/docs

CREATE DISTRIBUTION ds1 COLUMN TYPES int;
    add distribution    
------------------------
 distribution id -> ds1
(1 row)

CREATE KEY RANGE krid1 FROM 1 ROUTE TO sh1 FOR DISTRIBUTION ds1;
 add key range 
---------------
 bound -> 1
(1 row)

CREATE KEY RANGE krid2 FROM 30 ROUTE TO sh2 FOR DISTRIBUTION ds1;
 add key range 
---------------
 bound -> 30
(1 row)

ALTER DISTRIBUTION ds1 ATTACH RELATION distrr_mm_test DISTRIBUTION KEY id;
           attach table            
-----------------------------------
 relation name   -> distrr_mm_test
 distribution id -> ds1
(2 rows)

\c regress
CREATE TABLE distrr_mm_test (id INTEGER, t TEXT);
NOTICE: send query to shard(s) : sh1,sh2
COPY distrr_mm_test(id,t) FROM STDIN;
NOTICE: send query to shard(s) : sh1,sh2
COPY distrr_mm_test(id,t) FROM STDIN;
NOTICE: send query to shard(s) : sh1,sh2
UPDATE distrr_mm_test SET t = 'm' WHERE id IN (3, 34) /* __spqr__engine_v2: true */;
NOTICE: send query to shard(s) : sh1,sh2
SELECT * FROM distrr_mm_test ORDER BY id, t /*__spqr__execute_on: sh1 */;
NOTICE: send query to shard(s) : sh1
 id |  t  
----+-----
  1 | 'u'
  2 | 'u'
  3 | m
  4 | 'u'
  5 | 'u'
(5 rows)

SELECT * FROM distrr_mm_test ORDER BY id, t /*__spqr__execute_on: sh2 */;
NOTICE: send query to shard(s) : sh2
 id |  t  
----+-----
 31 | 'u'
 32 | 'u'
 33 | 'u'
 34 | m
 35 | 'u'
(5 rows)

DROP TABLE distrr_mm_test;
NOTICE: send query to shard(s) : sh1,sh2
\c spqr-console

		SPQR router admin console
	Here you can configure your routing rules
------------------------------------------------
	You can find documentation here 
https://github.com/pg-sharding/spqr/tree/master/docs

DROP DISTRIBUTION ALL CASCADE;
   drop distribution    
------------------------
 distribution id -> ds1
(1 row)

DROP KEY RANGE ALL;
 drop key range 
----------------
(0 rows)

