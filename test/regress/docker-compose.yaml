services:
    regress-mdb-image:
        image: regress-mdb-image
        build:
            context: https://github.com/pg-sharding/cpg.git#${MDB_BRANCH:-MDB_16_6_no_aqo}
            dockerfile: docker/regress/Dockerfile

    shard-image-mdb:
        build:
            context: ../..
            dockerfile: docker/shard/Dockerfile.mdb
        depends_on:
            - regress-mdb-image

    shard1:
        image: ${SHARD_IMAGE:-spqr-shard-image}
        environment:
            - POSTGRES_USER=regress
            - POSTGRES_DB=regress
        ports:
            - "7432:6432"
        hostname: spqr_shard_1
        container_name: spqr_shard_1
        healthcheck:
            test: psql -h spqr_shard_1 -p 6432 -U regress -d regress
            interval: 10s
            timeout: 3s
            retries: 50
        depends_on:
            - shard-image-mdb

    shard2:
        image: ${SHARD_IMAGE:-spqr-shard-image}
        environment:
            - POSTGRES_USER=regress
            - POSTGRES_DB=regress
        ports:
            - "7433:6432"
        hostname: spqr_shard_2
        container_name: spqr_shard_2
        healthcheck:
            test: psql -h spqr_shard_2 -p 6432 -U regress -d regress
            interval: 10s
            timeout: 3s
            retries: 50
        depends_on:
            - shard-image-mdb

    shard3:
        image: ${SHARD_IMAGE:-spqr-shard-image}
        environment:
            - POSTGRES_USER=regress
            - POSTGRES_DB=regress
        ports:
            - "7434:6432"
        hostname: spqr_shard_3
        container_name: spqr_shard_3
        healthcheck:
            test: psql -h spqr_shard_3 -p 6432 -U regress -d regress
            interval: 10s
            timeout: 3s
            retries: 50        
        depends_on:
            - shard-image-mdb

    shard4:
        image: ${SHARD_IMAGE:-spqr-shard-image}
        environment:
            - POSTGRES_USER=regress
            - POSTGRES_DB=regress
        ports:
            - "7435:6432"
        hostname: spqr_shard_4
        container_name: spqr_shard_4
        healthcheck:
            test: psql -h spqr_shard_4 -p 6432 -U regress -d regress
            interval: 10s
            timeout: 3s
            retries: 50
        depends_on:
            - shard-image-mdb

    pooler:
        build:
            dockerfile: ./docker/router/Dockerfile
            context: ../../
        ports:
            - "6433:6432"
        environment:
            - ROUTER_CONFIG=/spqr/test/regress/conf/localrouter.yaml
            - ROUTER_LOG=/var/log/spqr-router.log
        hostname: regress_pooler
        container_name: regress_pooler
        depends_on:
            shard1:
                condition: service_healthy
    router:
        build:
            dockerfile: ./docker/router/Dockerfile
            context: ../../
        ports:
            - "6432:6432"
        environment:
            - ROUTER_CONFIG=/spqr/test/regress/conf/router.yaml
            - ROUTER_LOG=/var/log/spqr-router.log
        hostname: regress_router
        container_name: regress_router
        depends_on:
            shard1:
                condition: service_healthy
            shard2:
                condition: service_healthy
            shard3:
                condition: service_healthy
            shard4:
                condition: service_healthy

    coordinator:
        build:
            dockerfile: ./docker/coordinator/Dockerfile
            context: ../../
        ports:
            - "7002:7002"
            - "7003:7003"
        environment:
            - COORDINATOR_CONFIG=/spqr/test/regress/conf/coordinator.yaml
        hostname: regress_coordinator
        container_name: regress_coordinator
        depends_on:
            - router
            - qdb01

    qdb01:
        image: 'bitnami/etcd:latest'
        hostname: regress_qdb_0_1
        container_name: regress_qdb_0_1
        environment:
            ALLOW_NONE_AUTHENTICATION: "yes"
            ETCD_LOG_LEVEL: "debug"
        ports:
            - "2379:2379"

    regress:
        build:
            context: .
        hostname: regress_tests
        container_name: regress_tests
        depends_on:
            - router
            - coordinator
            - pooler
            - regress-mdb-image
